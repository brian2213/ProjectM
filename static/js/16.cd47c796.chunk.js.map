{"version":3,"sources":["views/Smith/Smith.js","views/Smith/controller.js","views/Smith/scale.js","views/Dashboard/Dashboard.js"],"names":["chartObj","helpers","Chart","resolve","options","valueOrDefault","Controller","controllers","line","extend","linkScales","noop","updateElement","point","index","me","this","meta","getMeta","custom","datasetIndex","yScale","getScaleForId","yAxisID","xScale","xAxisID","lineModel","dataset","_model","_resolvePointOptions","_me$calculatePointPos","calculatePointPosition","x","y","_xScale","_yScale","_options","_datasetIndex","_index","skip","isNaN","radius","pointStyle","rotation","backgroundColor","borderColor","borderWidth","tension","steppedLine","hitRadius","element","i","ilen","key","chart","data","datasets","elements","values","context","dataIndex","ELEMENT_OPTIONS","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","hoverRadius","keys","Object","length","scale","getDataset","getPointPosition","real","imag","SmithScale","Scale","setDimensions","height","maxHeight","width","maxWidth","xCenter","left","Math","round","yCenter","top","paddingLeft","paddingTop","paddingRight","paddingBottom","buildTicks","rTicks","xTicks","convertTicksToLabels","rLabels","map","tick","ticks","rCallback","apply","xLabels","xCallback","calculateTickRotation","fit","right","bottom","fontSize","getValueOrDefault","defaults","global","defaultFontSize","display","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","ctx","font","xLabelLengths","measureText","minDimension","min","each","xTick","halfDimension","labelStart","cosPhi","sinPhi","labelWidth","padding","pts","pt","max","arcs","rLabelPoints","xLabelPoints","r","push","s","e","PI","cc","xRadius","abs","xCoord","yCoord","r0","sqrt","pow","phi0","atan2","phi2","acos","startAngle","cos","sin","draw","gridLines","strokeStyle","color","lineWidth","beginPath","moveTo","lineTo","stroke","arc","fillStyle","fontColor","defaultFontColor","rLabel","save","translate","rotate","textBaseline","textAlign","fillText","restore","xLabel","align","ang","textPadding","realRadius","realCenterX","realCenterY","imagRadius","imagCenterX","imagCenterY","angle","arccos","phi","getLabelForIndex","d","smith","type","tooltips","callbacks","title","bodyItem","freq","label","scaleService","registerScaleType","position","toString","SmithChart","state","chartData","_this","props","pointBackgroundColor","fill","text","legend","prevProps","prevState","snapshot","smithData","config","update","document","getElementById","getContext","plugins","afterDatasetsDraw","instance","yTop","chartArea","yHeight","maintainAspectRatio","mode","intersect","hover","forceUpdate","react_default","a","createElement","style","id","className","Component","mainChartOpts","lazy","__webpack_require__","then","bind","getStyle","_tooltips","enabled","CustomTooltips","_Users_Brian_React_MProject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__","labelColor","tooltipItem","scales","xAxes","drawOnChartArea","scaleLabel","labelString","yAxes","beginAtZero","Dashboard","_Users_Brian_React_MProject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_Brian_React_MProject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Brian_React_MProject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","loading","react__WEBPACK_IMPORTED_MODULE_8___default","toggle","_Users_Brian_React_MProject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","onRadioBtnClick","dropdownOpen","radioSelected","smithChart","autoScale","yscale","interval","_this2","axios","get","match","params","response","SmithDatasets","j","newset","_Users_Brian_React_MProject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","SmithDataBag","k","smithNewSet","mainChart2","labels","setState","event","newVal","currentTarget","value","parseInt","newOpt","JSON","parse","stringify","maxTicksLimit","console","log","newY","name","stepSize","_this3","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","sm","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_19__","onChange","autoScaleChange","placeholder","onYscaleChange","disabled","required","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","aria-label","reactstrap__WEBPACK_IMPORTED_MODULE_22__","reactstrap__WEBPACK_IMPORTED_MODULE_23__","onClick","active","marginTop","react_chartjs_2__WEBPACK_IMPORTED_MODULE_9__","_Smith_Smith__WEBPACK_IMPORTED_MODULE_26__"],"mappings":"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","file":"static/js/16.cd47c796.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Chart from 'chart.js'\nimport Controller from './controller';\nimport Scale, {defaults} from './scale';\n\n\n\n// import hexToRgba from 'hex-rgba'\n// Register the Controller and Scale\n\nChart.controllers.smith = Controller;\nChart.defaults.smith = {\n\tscale: {\n    type: 'smith',\n\n\t},\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(bodyItem, data) {\n\t\t\t\t// Pick first xLabel for now  (Brian Chen)\n\t\t\t\tvar dataset = data.datasets[bodyItem[0].datasetIndex];\n        var d = dataset.data[bodyItem[0].index];\n\t\t\t\treturn d.freq;\n\t\t\t},\n\t\t\tlabel: function(bodyItem, data) {\n\t\t\t\tvar dataset = data.datasets[bodyItem.datasetIndex];\n\t\t\t\tvar d = dataset.data[bodyItem.index];\n\t\t\t\treturn dataset.label + ': ' + d.real + ' + ' + d.imag + 'i';\n\t\t\t}\n\t\t}\n\t}\n};\nChart.scaleService.registerScaleType('smith', Scale, defaults);\nvar chartObj\n\nexport default class SmithChart extends Component{\n    state = {\n        chartData:{\n            datasets: [{\n                label: 'none',\n                borderColor: this.props.color,\n                pointBackgroundColor: this.props.color,\n                // backgroundColor: hexToRgba(this.props.color, 100),\n                borderWidth: 2,\n                fill: false,\n                radius: 0,\n                hitRadius: 3,\n                data: [],\n            }]\n        },\n        options: {\n            title: {\n                display: true,\n                text: 'Smith Chart'\n            },\n            legend: {\n                display: true\n            }\n        },\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n\n      // console.log(['prevState.chartData',prevState.chartData])\n      // console.log(['prevProps.data',prevProps.data])\n      // console.log(['this.props.data',this.props.data])\n      // console.log(['this.state.chartData',this.state.chartData])\n        if(prevProps.data !== this.props.data){\n          let smithData = this.props.data['datasets']\n          chartObj.config.data.datasets=smithData\n          chartObj.update()\n        }\n    }\n\n    componentDidMount(){\n        const ctx = document.getElementById(\"smith-chart\").getContext('2d');\n        // chartObj = new Chart(ctx, {\n        //     type: 'smith',\n        //     data: this.state.chartData,\n        //     options: this.state.options\n        // });\n\n         chartObj = new Chart(ctx, {\n          type: 'smith',\n          plugins: [{afterDatasetsDraw: function(instance) {\n\n            var yTop = instance.chartArea.top;\n            var yHeight = instance.chartArea.bottom-yTop;\n              // change your color here\n              instance.ctx.font = \"20px Arial\";\n              instance.ctx.fillStyle = 'rgba(0,100,100,0.7)';\n              instance.ctx.fillText(\"Magimaji.com\",instance.width/2.5, yTop+yHeight/1.5);\n\n\n      }}],\n          options : {\n\t\t\t\t\t\tmaintainAspectRatio:false,\n\t\t\t\t\t\ttooltips: {\n\t\t\t\t\t\t\tmode: 'nearest',\n\t\t\t\t\t\t\tintersect: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\tmode: 'nearest',\n\t\t\t\t\t\t\tintersect: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\telements : {\n\t\t\t\t\t\t\tpoint : {\n\t\t\t\t\t\t\t\t/* \tpointStyle: 'circle', */\n\t\t\t\t\t\t\t\tradius : 0.5,\n\t\t\t\t\t\t\t\tborderColor : 'black'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n          data: {\n\n          },\n        })\n        // console.log(['ori',chartObj])\n        // console.log(['wefw',this.state.chartData])\n        this.forceUpdate();\n\n    }\n\n    render(){\n        return(\n            <div style={{\n                width: '100%',\n                height: 550\n            }}>\n                <canvas id=\"smith-chart\" className=\"extra-large-chart\"></canvas>\n            </div>\n        )\n    }\n}\n","import Chart from 'chart.js';\n\nvar helpers = Chart.helpers;\nvar resolve = helpers.options.resolve;\nvar valueOrDefault = helpers.valueOrDefault;\n\nvar Controller = Chart.controllers.line.extend({\n\t// Not needed since there is only a single scale\n\tlinkScales: helpers.noop,\n\n\tupdateElement: function(point, index) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar datasetIndex = me.index;\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar {x, y} = me.calculatePointPosition(index);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\tcalculatePointPosition: function(dataIndex) {\n\t\tvar scale = this.chart.scale;\n\t\tvar data = this.getDataset().data[dataIndex];\n\t\treturn scale.getPointPosition(data.real, data.imag);\n\t},\n});\n\nexport default Controller;\n","/*\n * Defines the scale for the smith chart.\n * When built, Chart will be passed via the UMD header\n */\nimport Chart from 'chart.js';\nvar helpers = Chart.helpers;\n\nvar defaults = {\n\tposition: 'chartArea',\n\tdisplay: true,\n\tticks: {\n\t\tpadding: 5,\n\t\trCallback: function(tick) {\n\t\t\treturn tick.toString();\n\t\t},\n\t\txCallback: function(tick) {\n\t\t\treturn tick.toString() + 'i';\n\t\t}\n\t}\n};\n\nvar SmithScale = Chart.Scale.extend({\n\tsetDimensions: function() {\n\t\tthis.height = this.maxHeight;\n\t\tthis.width = this.maxWidth;\n\t\tthis.xCenter = this.left + Math.round(this.width / 2);\n\t\tthis.yCenter = this.top + Math.round(this.height / 2);\n\n\t\tthis.paddingLeft = 0;\n\t\tthis.paddingTop = 0;\n\t\tthis.paddingRight = 0;\n\t\tthis.paddingBottom = 0;\n\t},\n\n\tbuildTicks: function() {\n\t\tthis.rTicks = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0, 3.0, 4.0, 5.0, 10.0, 20.0, 50.0];\n\t\tthis.xTicks = [-50.0, -20.0, -10.0, -5.0, -4.0, -3.0, -2.0, -1.0, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1.0, 2.0, 3.0, 4.0, 5.0, 10.0, 20.0, 50.0];\n\n\t\t// Need to do this to make the core scale work\n\t\treturn [];\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.rLabels = this.rTicks.map(function(tick, index, ticks) {\n\t\t\treturn this.options.ticks.rCallback.apply(this, [tick, index, ticks]);\n\t\t}, this);\n\n\t\tthis.xLabels = this.xTicks.map(function(tick, index, ticks) {\n\t\t\treturn this.options.ticks.xCallback.apply(this, [tick, index, ticks]);\n\t\t}, this);\n\n\t\t// Need to do this to make the core scale work\n\t\treturn [];\n\t},\n\n\tcalculateTickRotation: helpers.noop,\n\n\t// fit function similar to the radial linear scale\n\tfit: function() {\n\t\tthis.xCenter = (this.left + this.right) / 2;\n\t\tthis.yCenter = (this.top + this.bottom) / 2;\n\t\tvar fontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\n\t\tif (this.options.ticks.display) {\n\t\t\tvar fontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\tvar fontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tthis.ctx.font = labelFont;\n\n\t\t\tvar xLabelLengths = this.xLabels.map(function(tick) {\n\t\t\t\treturn this.ctx.measureText(tick).width;\n\t\t\t}, this);\n\n\t\t\t// Figure out where these points will go, and assuming they are drawn there, how much will it go outside of the chart area.\n\t\t\t// We use that to determine how much padding we nede on each side\n\t\t\tthis.minDimension = Math.min(this.right - this.left, this.bottom - this.top);\n\n\t\t\thelpers.each(this.xTicks, function(xTick, index) {\n\t\t\t\tif (xTick !== 0) {\n\t\t\t\t\tvar halfDimension = this.minDimension / 2;\n\t\t\t\t\tvar labelStart = this.getPointPosition(0, xTick);\n\t\t\t\t\tvar cosPhi = (labelStart.x - this.xCenter) / halfDimension;\n\t\t\t\t\tvar sinPhi = (labelStart.y - this.yCenter) / halfDimension;\n\t\t\t\t\tvar labelWidth = xLabelLengths[index] + this.options.ticks.padding;\n\t\t\t\t\tvar pts = [{\n\t\t\t\t\t\tx: labelStart.x + (cosPhi * labelWidth) + (sinPhi * fontSize),\n\t\t\t\t\t\ty: labelStart.y + (sinPhi * labelWidth) - (cosPhi * fontSize)\n\t\t\t\t\t}, {\n\t\t\t\t\t\tx: labelStart.x + (cosPhi * labelWidth) - (sinPhi * fontSize),\n\t\t\t\t\t\ty: labelStart.y + (sinPhi * labelWidth) + (cosPhi * fontSize)\n\t\t\t\t\t}];\n\n\t\t\t\t\thelpers.each(pts, function(pt) {\n\t\t\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft, this.left - pt.x);\n\t\t\t\t\t\tthis.paddingTop = Math.max(this.paddingTop, this.top - pt.y);\n\t\t\t\t\t\tthis.paddingRight = Math.max(this.paddingRight, pt.x - this.right);\n\t\t\t\t\t\tthis.paddingBottom = Math.max(this.paddingBottom, pt.y - this.bottom);\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t}\n\n\t\tthis.minDimension = Math.min(this.right - this.left - this.paddingLeft - this.paddingRight, this.bottom - this.top - this.paddingBottom - this.paddingTop);\n\n\t\t// Store data about the arcs that we will draw\n\t\tthis.arcs = [];\n\t\tthis.rLabelPoints = [];\n\t\tthis.xLabelPoints = [];\n\n\t\t// How do we draw the circles? From http://care.iitd.ac.in/People/Faculty/bspanwar/crl713/smith_chart_basics.pdf\n\t\t// we have that constant resistance circles obey the following\n\t\t// Center { r / (1 + r), 0}, Radius = 1 / (1 + r)\n\t\t//\n\t\t// The center point and radius will need to be scaled based on the size of the canvas\n\t\t// Draw each of the circles\n\t\thelpers.each(this.rTicks, function(r) {\n\t\t\tvar radius = 1 / (1 + r) * (this.minDimension / 2); // scale for the min dimension\n\t\t\tvar x = this.xCenter + ((r / (1 + r)) * (this.minDimension / 2));\n\n\t\t\tthis.arcs.push({\n\t\t\t\tx: x,\n\t\t\t\ty: this.yCenter,\n\t\t\t\tr: radius,\n\t\t\t\ts: 0,\n\t\t\t\te: 2 * Math.PI,\n\t\t\t\tcc: false\n\t\t\t});\n\n\t\t\tthis.rLabelPoints.push({\n\t\t\t\tx: x - radius,\n\t\t\t\ty: this.yCenter\n\t\t\t});\n\t\t}, this);\n\n\t\thelpers.each(this.xTicks, function(x) {\n\t\t\tif (x !== 0) {\n\t\t\t\tvar xRadius = (1 / Math.abs(x)) * (this.minDimension / 2);\n\t\t\t\tvar xCoord = this.xCenter + (this.minDimension / 2); // far right side of the drawing area\n\t\t\t\tvar yCoord = x > 0 ? this.yCenter - xRadius : this.yCenter + xRadius;\n\n\t\t\t\t// Ok, these circles are a pain. They need to only be drawn in the region that intersects the\n\t\t\t\t// resistance == 0 circle. This circle has a radius of 0.5 * this.minDimension and is centered\n\t\t\t\t// at (xCenter, yCenter). We will solve the intersection in polar coordinates and define the\n\t\t\t\t// center of our coordinate system as the center of the xCircle, ie (xCoord, yCoord)\n\n\t\t\t\tvar r0 = Math.sqrt(Math.pow(xCoord - this.xCenter, 2) + Math.pow(yCoord - this.yCenter, 2));\n\t\t\t\tvar phi0 = Math.atan2(this.yCenter - yCoord, this.xCenter - xCoord);\n\n\t\t\t\t// A circle with center location r0,phi0 with radius a is defined in polar coordinates by the equation\n\t\t\t\t// r = r0 * cos(phi - phi0) + sqrt(a^2 - ((r0^2) * sin^2(phi - phi0)))\n\t\t\t\t// Our xCircle is defined by r = xRadius because of where we defined the 0,0 point\n\t\t\t\t// Solving the intersection of these equations yields\n\t\t\t\t// phi = 0.5 * arccos((xRadius^2 - a^2) / (r0^2)) + phi0\n\t\t\t\tvar arccos = Math.acos((Math.pow(xRadius, 2) - Math.pow(this.minDimension / 2, 2)) / Math.pow(r0, 2));\n\t\t\t\tvar phi2 = ((x > 0 ? 0.5 : -0.5) * arccos) + phi0;\n\t\t\t\tvar startAngle = x > 0 ? 0.5 * Math.PI : -0.5 * Math.PI;\n\n\t\t\t\tthis.arcs.push({\n\t\t\t\t\tx: xCoord,\n\t\t\t\t\ty: yCoord,\n\t\t\t\t\tr: xRadius,\n\t\t\t\t\ts: startAngle,\n\t\t\t\t\te: phi2,\n\t\t\t\t\tcc: x > 0 ? false : true\n\t\t\t\t});\n\n\t\t\t\tthis.xLabelPoints.push({\n\t\t\t\t\tx: xCoord + (Math.cos(phi2) * xRadius),\n\t\t\t\t\ty: yCoord + (Math.sin(phi2) * xRadius),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.xLabelPoints.push(null);\n\t\t\t}\n\t\t}, this);\n\t},\n\n\t// Need a custom draw function here\n\tdraw: function() {\n\t\tif (this.options.display) {\n\t\t\tif (this.options.gridLines.display) {\n\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.color;\n\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.lineWidth;\n\n\t\t\t\t// Draw horizontal line for x === 0\n\t\t\t\tthis.ctx.beginPath();\n\t\t\t\tthis.ctx.moveTo(this.xCenter - (this.minDimension / 2), this.yCenter);\n\t\t\t\tthis.ctx.lineTo(this.xCenter + (this.minDimension / 2), this.yCenter);\n\t\t\t\tthis.ctx.stroke();\n\n\t\t\t\t// Draw each of the arcs\n\t\t\t\thelpers.each(this.arcs, function(arc) {\n\t\t\t\t\tthis.ctx.beginPath();\n\t\t\t\t\tthis.ctx.arc(arc.x, arc.y, arc.r, arc.s, arc.e, arc.cc);\n\t\t\t\t\tthis.ctx.stroke();\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\t// Simply draw a border line\n\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.color;\n\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.lineWidth;\n\t\t\t\tthis.ctx.beginPath();\n\t\t\t\tthis.ctx.arc(this.xCenter, this.yCenter, this.minDimension / 2, 0, 2 * Math.PI, false);\n\t\t\t\tthis.ctx.stroke();\n\t\t\t}\n\n\t\t\tif (this.options.ticks.display) {\n\t\t\t\tvar fontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tvar fontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\t\tvar fontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\n\t\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\t\tthis.ctx.font = labelFont;\n\n\t\t\t\tthis.ctx.fillStyle = helpers.getValueOrDefault(this.options.ticks.fontColor, Chart.defaults.global.defaultFontColor);\n\n\t\t\t\thelpers.each(this.rLabels, function(rLabel, index) {\n\t\t\t\t\tvar pt = this.rLabelPoints[index];\n\n\t\t\t\t\tthis.ctx.save();\n\t\t\t\t\tthis.ctx.translate(pt.x, pt.y);\n\t\t\t\t\tthis.ctx.rotate(-0.5 * Math.PI);\n\t\t\t\t\tthis.ctx.textBaseline = 'middle';\n\t\t\t\t\tthis.ctx.textAlign = 'center';\n\t\t\t\t\tthis.ctx.fillText(rLabel, 0, 0);\n\t\t\t\t\tthis.ctx.restore();\n\t\t\t\t}, this);\n\n\t\t\t\thelpers.each(this.xLabels, function(xLabel, index) {\n\t\t\t\t\tvar pt = this.xLabelPoints[index];\n\n\t\t\t\t\tif (pt) {\n\t\t\t\t\t\tvar align = 'left';\n\t\t\t\t\t\tvar ang = Math.atan2(pt.y - this.yCenter, pt.x - this.xCenter);\n\t\t\t\t\t\tvar textPadding = this.options.ticks.padding;\n\n\t\t\t\t\t\tif (pt.x < this.xCenter) {\n\t\t\t\t\t\t\tang += Math.PI;\n\t\t\t\t\t\t\talign = 'right';\n\t\t\t\t\t\t\ttextPadding *= -1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.ctx.save();\n\t\t\t\t\t\tthis.ctx.translate(pt.x, pt.y);\n\t\t\t\t\t\tthis.ctx.rotate(ang);\n\t\t\t\t\t\tthis.ctx.textBaseline = 'middle';\n\t\t\t\t\t\tthis.ctx.textAlign = align;\n\t\t\t\t\t\tthis.ctx.fillText(xLabel, textPadding, 0);\n\t\t\t\t\t\tthis.ctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetPointPosition: function(real, imag) {\n\t\t// look for the intersection of the r circle and the x circle that is not the one along the right side of the canvas\n\t\tvar realRadius = 1 / (1 + real) * (this.minDimension / 2); // scale for the minDimension size\n\t\tvar realCenterX = this.xCenter + ((real / (1 + real)) * (this.minDimension / 2));\n\t\tvar realCenterY = this.yCenter;\n\n\t\tvar imagRadius = (1 / Math.abs(imag)) * (this.minDimension / 2);\n\t\tvar imagCenterX = this.xCenter + (this.minDimension / 2); // far right side of the drawing area\n\t\tvar imagCenterY = imag > 0 ? this.yCenter - imagRadius : this.yCenter + imagRadius;\n\n\t\tvar r0 = Math.sqrt(Math.pow(imagCenterX - realCenterX, 2) + Math.pow(imagCenterY - realCenterY, 2));\n\t\tvar angle = Math.atan2(realCenterY - imagCenterY, realCenterX - imagCenterX);\n\t\tvar arccos = Math.acos((Math.pow(imagRadius, 2) - Math.pow(realRadius, 2)) / Math.pow(r0, 2));\n\t\tvar phi = imag > 0 ? 0.5 * arccos + angle : -0.5 * arccos + angle;\n\n\t\t// We have an r and a phi from the point (imagCenterX, imagCenterY)\n\t\t// translate to an x and a undefined\n\t\treturn {\n\t\t\tx: imag === 0 ? realCenterX - realRadius : (Math.cos(phi) * imagRadius) + imagCenterX,\n\t\t\ty: imag === 0 ? this.yCenter : (Math.sin(phi) * imagRadius) + imagCenterY\n\t\t};\n\t},\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar d = this.chart.data.datasets[datasetIndex].data[index];\n\t\treturn d.real + ' + ' + d.imag + 'i';\n\t}\n});\n\nexport {defaults};\nexport default SmithScale;\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Progress,\n  Label,\n  Input,\n  FormGroup,\n  Row,\n  Table\n} from 'reactstrap';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport SmithChart from '../Smith/Smith';\n\nconst Widget03 = lazy(() => import('../../views/Widgets/Widget03'));\n\nconst brandPrimary = getStyle('--primary');\nconst brandSuccess = getStyle('--success');\nconst brandInfo = getStyle('--info');\nconst brandWarning = getStyle('--warning');\nconst brandDanger = getStyle('--danger');\n\n// Main Chart\n\nconst mainChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips,\n    intersect: true,\n    mode: 'index',\n    position: 'nearest',\n    intersect: false,\n    callbacks: {\n      labelColor: function(tooltipItem, chart) {\n        return {\n          backgroundColor:\n            chart.data.datasets[tooltipItem.datasetIndex].borderColor\n        };\n      }\n    }\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: true\n  },\n  hover: {\n    mode: 'index',\n    intersect: false\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          drawOnChartArea: true\n        },\n        ticks: {\n          // maxTicksLimit:10,\n\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Frequency (MHz)'\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true\n          // maxTicksLimit: 5,\n          // stepSize: 15,\n          // max: 0,\n          // min: -90\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'dB'\n        }\n      }\n    ]\n  },\n  elements: {\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4\n      // hoverBorderWidth: 3,\n    }\n  }\n};\n\nconst color = [\n  'rgb(255, 99, 132)',\n  'rgb(54, 162, 235)',\n  'rgb(255, 159, 64)',\n  'rgb(75, 192, 192)',\n  'rgb(255, 205, 86)',\n  'rgb(153, 102, 255)',\n  'rgb(231,233,237)',\n  'aqua',\n  'antiquewhite',\n  'darkgreen',\n  'skyblue'\n];\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    // this.fileId = props.location.state.id\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 1,\n      chart: {},\n      smithChart: {},\n      type: 's',\n      autoScale: 1,\n      yscale: { max: 0, min: -90, interval: 10 },\n      mainChartOpts: mainChartOpts,\n      freq: []\n    };\n    this.data = {};\n  }\n\n  componentDidMount() {\n    axios\n      .get('http://34.208.107.50/Mproject-1.0/show/' + this.props.match.params.id)\n      .then(response => {\n        let data = response.data;\n        this.state.data = data;\n        this.state.freq = data['freq'];\n        let datasets = [];\n        let SmithDatasets = [];\n\n        for (let i = 0; i < data['portAmount']; i++) {\n          for (let j = 0; j < data['portAmount']; j++) {\n            let newset = {\n              label: 'S' + (i + 1) + (j + 1),\n              data: [...data['sdatadB'][i][j]],\n              fill: false,\n              radius: 0,\n              backgroundColor:\n                color[(i * data['portAmount'] + j) % color.length],\n              borderColor: color[(i * data['portAmount'] + j) % color.length]\n            };\n\n            let SmithDataBag = [];\n            for (let k = 0; k < data['sdataSRe'][i][j].length; k++) {\n              SmithDataBag.push({\n                freq: data['freq'][k],\n                real: data['sdataZRe'][i][j][k],\n                imag: data['sdataZIm'][i][j][k]\n              });\n            }\n\n            let smithNewSet = {\n              label: 'S' + (i + 1) + (j + 1),\n              data: SmithDataBag,\n              fill: false,\n              backgroundColor:\n                color[(i * data['portAmount'] + j) % color.length],\n              borderColor: color[(i * data['portAmount'] + j) % color.length]\n            };\n            datasets.push(newset);\n            SmithDatasets.push(smithNewSet);\n          }\n        }\n        let mainChart2 = { labels: data['freq'], datasets: datasets };\n\n        this.setState({\n          chart: mainChart2,\n          smithChart: { datasets: SmithDatasets }\n        });\n      });\n  }\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  autoScaleChange(event) {\n    let newVal = event.currentTarget.value;\n\n    this.setState({\n      autoScale: newVal\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    let datasets = [];\n    let data = this.state.data;\n\n    for (let i = 0; i < data['portAmount']; i++) {\n      for (let j = 0; j < data['portAmount']; j++) {\n        let newset = {\n          label: 'S' + (i + 1) + (j + 1),\n          data:\n            radioSelected === 1 ? data['sdatadB'][i][j] : data['vswr'][i][j],\n          fill: false,\n          radius: 0,\n          backgroundColor: color[(i * data['portAmount'] + j) % color.length],\n          borderColor: color[(i * data['portAmount'] + j) % color.length]\n        };\n        datasets.push(newset);\n      }\n    }\n    let mainChart2 = { labels: data['freq'], datasets: datasets };\n\n    this.setState({\n      chart: mainChart2,\n      radioSelected: radioSelected\n    });\n  }\n  onXscaleChange(event) {\n    let newVal = parseInt(event.currentTarget.value);\n    let newOpt = JSON.parse(JSON.stringify(this.state.mainChartOpts));\n\n    newOpt.scales.xAxes[0].ticks.maxTicksLimit = newVal;\n    console.log(newOpt)\n    console.log(newVal)\n    this.setState({\n\n      mainChartOpts: newOpt\n    });\n    this.forceUpdate()\n  }\n\n  onYscaleChange(event) {\n    let newVal = parseInt(event.currentTarget.value);\n    // console.log(this.state.yscale)\n\n    //force deep copy\n    let newOpt = JSON.parse(JSON.stringify(this.state.mainChartOpts));\n    let newY = {\n      min: this.state.yscale.min,\n      max: this.state.yscale.max,\n      interval: this.state.yscale.interval\n    };\n    if (event.currentTarget.name == 'min') {\n      newY.min = newVal;\n      newOpt.scales.yAxes[0].ticks.min = newVal;\n    } else if (event.currentTarget.name == 'max') {\n      newY.max = newVal;\n      newOpt.scales.yAxes[0].ticks.max = newVal;\n    } else {\n      newY.interval = newVal;\n      newOpt.scales.yAxes[0].ticks.stepSize = newVal;\n    }\n    if (newY.max <= newY.min) return;\n    // console.log(newY)\n    // mainChartOpts.scales.yAxes[0].ticks.min=-10\n\n    // force deep copy\n    // let newOpt = JSON.parse(JSON.stringify(mainChartOpts))\n    // newOpt.scales.yAxes[0].ticks.min=newY.min\n    // newOpt.scales.yAxes[0].ticks.max=newY.max\n    // newOpt.scales.yAxes[0].ticks.stepSize=newY.interval\n\n    this.setState({\n      yscale: newY,\n      mainChartOpts: newOpt\n    });\n  }\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\" />\n                <strong>Scales</strong>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm=\"1\">\n                    <FormGroup>\n                      <Label htmlFor=\"Auto\">Auto</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"Auto\"\n                        id=\"Auto\"\n                        onChange={e => this.autoScaleChange(e)}\n                      >\n                        <option value=\"1\">Yes</option>\n                        <option value=\"2\">No</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  {/* <Col sm=\"2\">\n                    <FormGroup>\n                      <Label htmlFor=\"X-Interval\">xAxes Max Ticks</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"x-interval\"\n                        id=\"x-interval\"\n                        placeholder=\"auto\"\n\n                        onChange={e => this.onXscaleChange(e)}\n                        disabled={this.state.autoScale == 1}\n                      />\n                    </FormGroup>\n                  </Col> */}\n                  {/* <Col sm=\"2\">\n                    <FormGroup>\n                      <Label htmlFor=\"xmin\">Min</Label>\n                      <Input\n                        type=\"select\"\n                        id=\"xmin\"\n                        onChange={e => this.onXscaleChange(e)}\n                        disabled={this.state.autoScale == 1}\n                      >\n                        {this.state.freq.map((val, key) => (\n                          <option value={key}>{val}</option>\n                        ))}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col sm=\"2\">\n                    <FormGroup>\n                      <Label htmlFor=\"xmax\">Max</Label>\n                      <Input\n                        type=\"select\"\n                        id=\"xmax\"\n                        onChange={e => this.onXscaleChange(e)}\n                        disabled={this.state.autoScale == 1}\n                      >\n                        {this.state.freq.map((val, key) => (\n                          <option value={key}>{val}</option>\n                        ))}\n                      </Input>\n                    </FormGroup>\n                  </Col> */}\n\n                  <Col sm=\"2\">\n                    <FormGroup>\n                      <Label htmlFor=\"interval\">yAxes Interval</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"interval\"\n                        id=\"y-interval\"\n                        placeholder={this.state.yscale.interval}\n                        onChange={e => this.onYscaleChange(e)}\n                        disabled={this.state.autoScale == 1}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col sm=\"1\">\n                    <FormGroup>\n                      <Label htmlFor=\"min\">Min</Label>\n                      <Input\n                        type=\"text\"\n                        id=\"ymin\"\n                        name=\"min\"\n                        placeholder={this.state.yscale.min}\n                        required\n                        onChange={e => this.onYscaleChange(e)}\n                        disabled={this.state.autoScale == 1}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col sm=\"1\">\n                    <FormGroup>\n                      <Label htmlFor=\"max\">Max</Label>\n                      <Input\n                        type=\"text\"\n                        id=\"ymax\"\n                        name=\"max\"\n                        placeholder={this.state.yscale.max}\n                        required\n                        onChange={e => this.onYscaleChange(e)}\n                        disabled={this.state.autoScale == 1}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col sm=\"5\">\n                    <CardTitle className=\"mb-0\">Magimaji.com</CardTitle>\n                    {/* <div className=\"small text-muted\">November 2015</div> */}\n                  </Col>\n                  <Col sm=\"7\" className=\"d-none d-sm-inline-block\">\n                    {/* <Button color=\"primary\" className=\"float-right\">\n                      <i className=\"icon-cloud-download\" />\n                    </Button> */}\n\n                    <ButtonToolbar\n                      className=\"float-right\"\n                      aria-label=\"Toolbar with button groups\"\n                    >\n                      <ButtonGroup className=\"mr-3\" aria-label=\"First group\">\n                        <Button\n                          color=\"outline-secondary\"\n                          onClick={() => this.onRadioBtnClick(1)}\n                          active={this.state.radioSelected === 1}\n                        >\n                          S-Paramater\n                        </Button>\n                        <Button\n                          color=\"outline-secondary\"\n                          onClick={() => this.onRadioBtnClick(2)}\n                          active={this.state.radioSelected === 2}\n                        >\n                          VSWR\n                        </Button>\n                      </ButtonGroup>\n                    </ButtonToolbar>\n                  </Col>\n                </Row>\n                <div\n                  className=\"chart-wrapper\"\n                  style={{ height: 500 + 'px', marginTop: 40 + 'px' }}\n                >\n                  <Line\n                    data={this.state.chart}\n                    options={this.state.mainChartOpts}\n                    height={500}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardBody>\n                <div\n                  className=\"chart-wrapper\"\n                  style={{ height: 550 + 'px', marginTop: 40 + 'px' }}\n                >\n                  <SmithChart data={this.state.smithChart} />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}