{"version":3,"sources":["views/Pages/File/File.js"],"names":["baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","cookies","Cookies","Basic","props","_useDropzone","useDropzone","onDrop","onDropEvent","acceptedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","files","map","file","i","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_12__","action","onClick","e","openDashBoard","key","path","id","ids","push","style","useMemo","Object","_Users_Brian_React_MProject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","className","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","File","loading","event","_this","setRedirect","currentTarget","forEach","req","request","post","attach","then","result","text","set","setState","state","redirect","redirectId","renderRedirect","next","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","from","to","this","Component"],"mappings":"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","file":"static/js/19.b89ef825.chunk.js","sourcesContent":["import React, { useMemo, Component, useEffect } from 'react';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport request from 'superagent';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  ListGroup,\n  ListGroupItem,\n  Progress,\n  Row\n} from 'reactstrap';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst cookies = new Cookies();\n\nfunction Basic(props) {\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    onDrop: props.onDropEvent\n  });\n\n  let files = acceptedFiles.map((file, i) => {\n    return (\n      <ListGroupItem\n        action\n        onClick={e => props.openDashBoard(e)}\n        key={file.path}\n        id={props.ids[i]}\n      >\n        {file.path} :: Click to View\n      </ListGroupItem>\n    );\n  });\n  for (var file in cookies.cookies) {\n    files.push(\n      <ListGroupItem\n        action\n        onClick={e => props.openDashBoard(e)}\n        key={file}\n        id={cookies.cookies[file]}\n      >\n        {file}  :: Click to View\n      </ListGroupItem>\n    );\n  }\n  files.push(\n    <ListGroupItem\n      action\n      onClick={e => props.openDashBoard(e)}\n      key='sample.s1p'\n      id='5caaf46a260b038b1d1dc555'\n    >\n      sample.s1p  :: Click to View\n    </ListGroupItem>\n  );\n  files.push(\n    <ListGroupItem\n      action\n      onClick={e => props.openDashBoard(e)}\n      key='sample.s4p'\n      id='5caaf498260b038b1d1dc556'\n    >\n      sample.s4p  :: Click to View\n    </ListGroupItem>\n  );\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }),\n    [isDragActive, isDragReject]\n  );\n\n  return (\n    <section className=\"container\">\n      <Row>\n        <Col>\n          <Card>\n            <div {...getRootProps({ style })}>\n              <input {...getInputProps()} />\n              <p>\n                Drag and drop touchstone(SnP) files here, or click to select\n                files\n              </p>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <CardHeader>\n              <i className=\"fa fa-align-justify\" />\n              <strong>Files</strong>\n            </CardHeader>\n            <CardBody>\n              <ListGroup>{files} </ListGroup>\n              {/* <ListGroup>{oldFile}</ListGroup> */}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </section>\n  );\n}\n\nclass File extends Component {\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n  openDashBoard = event => {\n    this.setRedirect(event.currentTarget.id);\n  };\n  onDropEvent = acceptedFiles => {\n    let id = [];\n    acceptedFiles.forEach(file => {\n      let req = request.post('http://34.208.107.50/Mproject-1.0/upload2');\n      req.attach('file', file);\n      req.then(result => {\n        // process the result here\n        id.push(result.text);\n        cookies.set(file.path, result.text, { path: '/' });\n      });\n    });\n\n    this.setState({ ids: id });\n  };\n\n  state = {\n    ids: [],\n    redirect: false,\n    redirectId: ''\n  };\n\n  setRedirect = redirectId => {\n    this.setState({\n      redirect: true,\n      redirectId: redirectId\n    });\n  };\n  renderRedirect = () => {\n    let next = '/dashboard/' + this.state.redirectId;\n\n    if (this.state.redirect) {\n      return <Redirect from=\"/file\" to={next} />;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Basic\n              onDropEvent={this.onDropEvent}\n              ids={this.state.ids}\n              openDashBoard={this.openDashBoard}\n            />\n          </Col>\n        </Row>\n        {this.renderRedirect()}\n      </div>\n    );\n  }\n}\n\nexport default File;\n"],"sourceRoot":""}