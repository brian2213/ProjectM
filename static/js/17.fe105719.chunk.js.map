{"version":3,"sources":["views/Smith/Smith.js","views/Smith/controller.js","views/Smith/scale.js","views/Pages/About/About.js"],"names":["chartObj","helpers","Chart","resolve","options","valueOrDefault","Controller","controllers","line","extend","linkScales","noop","updateElement","point","index","me","this","meta","getMeta","custom","datasetIndex","yScale","getScaleForId","yAxisID","xScale","xAxisID","lineModel","dataset","_model","_resolvePointOptions","_me$calculatePointPos","calculatePointPosition","x","y","_xScale","_yScale","_options","_datasetIndex","_index","skip","isNaN","radius","pointStyle","rotation","backgroundColor","borderColor","borderWidth","tension","steppedLine","hitRadius","element","i","ilen","key","chart","data","datasets","elements","values","context","dataIndex","ELEMENT_OPTIONS","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","hoverRadius","keys","Object","length","scale","getDataset","getPointPosition","real","imag","SmithScale","Scale","setDimensions","height","maxHeight","width","maxWidth","xCenter","left","Math","round","yCenter","top","paddingLeft","paddingTop","paddingRight","paddingBottom","buildTicks","rTicks","xTicks","convertTicksToLabels","rLabels","map","tick","ticks","rCallback","apply","xLabels","xCallback","calculateTickRotation","fit","right","bottom","fontSize","getValueOrDefault","defaults","global","defaultFontSize","display","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","ctx","font","xLabelLengths","measureText","minDimension","min","each","xTick","halfDimension","labelStart","cosPhi","sinPhi","labelWidth","padding","pts","pt","max","arcs","rLabelPoints","xLabelPoints","r","push","s","e","PI","cc","xRadius","abs","xCoord","yCoord","r0","sqrt","pow","phi0","atan2","phi2","acos","startAngle","cos","sin","draw","gridLines","strokeStyle","color","lineWidth","beginPath","moveTo","lineTo","stroke","arc","fillStyle","fontColor","defaultFontColor","rLabel","save","translate","rotate","textBaseline","textAlign","fillText","restore","xLabel","align","ang","textPadding","realRadius","realCenterX","realCenterY","imagRadius","imagCenterX","imagCenterY","angle","arccos","phi","getLabelForIndex","d","smith","type","tooltips","callbacks","title","bodyItem","freq","label","scaleService","registerScaleType","position","toString","SmithChart","state","chartData","_this","props","pointBackgroundColor","fill","text","legend","prevProps","prevState","snapshot","smithData","config","update","document","getElementById","getContext","plugins","afterDatasetsDraw","instance","yTop","chartArea","yHeight","maintainAspectRatio","mode","intersect","hover","forceUpdate","react_default","a","createElement","style","id","className","Component","About","JSON","parse","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"static/js/17.fe105719.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Chart from 'chart.js'\nimport Controller from './controller';\nimport Scale, {defaults} from './scale';\n\n\n\n// import hexToRgba from 'hex-rgba'\n// Register the Controller and Scale\n\nChart.controllers.smith = Controller;\nChart.defaults.smith = {\n\tscale: {\n    type: 'smith',\n\n\t},\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(bodyItem, data) {\n\t\t\t\t// Pick first xLabel for now  (Brian Chen)\n\t\t\t\tvar dataset = data.datasets[bodyItem[0].datasetIndex];\n        var d = dataset.data[bodyItem[0].index];\n\t\t\t\treturn d.freq;\n\t\t\t},\n\t\t\tlabel: function(bodyItem, data) {\n\t\t\t\tvar dataset = data.datasets[bodyItem.datasetIndex];\n\t\t\t\tvar d = dataset.data[bodyItem.index];\n\t\t\t\treturn dataset.label + ': ' + d.real + ' + ' + d.imag + 'i';\n\t\t\t}\n\t\t}\n\t}\n};\nChart.scaleService.registerScaleType('smith', Scale, defaults);\nvar chartObj\n\nexport default class SmithChart extends Component{\n    state = {\n        chartData:{\n            datasets: [{\n                label: 'none',\n                borderColor: this.props.color,\n                pointBackgroundColor: this.props.color,\n                // backgroundColor: hexToRgba(this.props.color, 100),\n                borderWidth: 2,\n                fill: false,\n                radius: 0,\n                hitRadius: 3,\n                data: [],\n            }]\n        },\n        options: {\n            title: {\n                display: true,\n                text: 'Smith Chart'\n            },\n            legend: {\n                display: true\n            }\n        },\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n\n      // console.log(['prevState.chartData',prevState.chartData])\n      // console.log(['prevProps.data',prevProps.data])\n      // console.log(['this.props.data',this.props.data])\n      // console.log(['this.state.chartData',this.state.chartData])\n        if(prevProps.data !== this.props.data){\n          let smithData = this.props.data['datasets']\n          chartObj.config.data.datasets=smithData\n          chartObj.update()\n        }\n    }\n\n    componentDidMount(){\n        const ctx = document.getElementById(\"smith-chart\").getContext('2d');\n        // chartObj = new Chart(ctx, {\n        //     type: 'smith',\n        //     data: this.state.chartData,\n        //     options: this.state.options\n        // });\n\n         chartObj = new Chart(ctx, {\n          type: 'smith',\n          plugins: [{afterDatasetsDraw: function(instance) {\n\n            var yTop = instance.chartArea.top;\n            var yHeight = instance.chartArea.bottom-yTop;\n              // change your color here\n              instance.ctx.font = \"20px Arial\";\n              instance.ctx.fillStyle = 'rgba(0,100,100,0.7)';\n              instance.ctx.fillText(\"Magimaji.com\",instance.width/2.5, yTop+yHeight/1.5);\n\n\n      }}],\n          options : {\n\t\t\t\t\t\tmaintainAspectRatio:false,\n\t\t\t\t\t\ttooltips: {\n\t\t\t\t\t\t\tmode: 'nearest',\n\t\t\t\t\t\t\tintersect: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\tmode: 'nearest',\n\t\t\t\t\t\t\tintersect: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\telements : {\n\t\t\t\t\t\t\tpoint : {\n\t\t\t\t\t\t\t\t/* \tpointStyle: 'circle', */\n\t\t\t\t\t\t\t\tradius : 0.5,\n\t\t\t\t\t\t\t\tborderColor : 'black'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n          data: {\n\n          },\n        })\n        // console.log(['ori',chartObj])\n        // console.log(['wefw',this.state.chartData])\n        this.forceUpdate();\n\n    }\n\n    render(){\n        return(\n            <div style={{\n                width: '100%',\n                height: 550\n            }}>\n                <canvas id=\"smith-chart\" className=\"extra-large-chart\"></canvas>\n            </div>\n        )\n    }\n}\n","import Chart from 'chart.js';\n\nvar helpers = Chart.helpers;\nvar resolve = helpers.options.resolve;\nvar valueOrDefault = helpers.valueOrDefault;\n\nvar Controller = Chart.controllers.line.extend({\n\t// Not needed since there is only a single scale\n\tlinkScales: helpers.noop,\n\n\tupdateElement: function(point, index) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar datasetIndex = me.index;\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar {x, y} = me.calculatePointPosition(index);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\tcalculatePointPosition: function(dataIndex) {\n\t\tvar scale = this.chart.scale;\n\t\tvar data = this.getDataset().data[dataIndex];\n\t\treturn scale.getPointPosition(data.real, data.imag);\n\t},\n});\n\nexport default Controller;\n","/*\n * Defines the scale for the smith chart.\n * When built, Chart will be passed via the UMD header\n */\nimport Chart from 'chart.js';\nvar helpers = Chart.helpers;\n\nvar defaults = {\n\tposition: 'chartArea',\n\tdisplay: true,\n\tticks: {\n\t\tpadding: 5,\n\t\trCallback: function(tick) {\n\t\t\treturn tick.toString();\n\t\t},\n\t\txCallback: function(tick) {\n\t\t\treturn tick.toString() + 'i';\n\t\t}\n\t}\n};\n\nvar SmithScale = Chart.Scale.extend({\n\tsetDimensions: function() {\n\t\tthis.height = this.maxHeight;\n\t\tthis.width = this.maxWidth;\n\t\tthis.xCenter = this.left + Math.round(this.width / 2);\n\t\tthis.yCenter = this.top + Math.round(this.height / 2);\n\n\t\tthis.paddingLeft = 0;\n\t\tthis.paddingTop = 0;\n\t\tthis.paddingRight = 0;\n\t\tthis.paddingBottom = 0;\n\t},\n\n\tbuildTicks: function() {\n\t\tthis.rTicks = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0, 3.0, 4.0, 5.0, 10.0, 20.0, 50.0];\n\t\tthis.xTicks = [-50.0, -20.0, -10.0, -5.0, -4.0, -3.0, -2.0, -1.0, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1.0, 2.0, 3.0, 4.0, 5.0, 10.0, 20.0, 50.0];\n\n\t\t// Need to do this to make the core scale work\n\t\treturn [];\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.rLabels = this.rTicks.map(function(tick, index, ticks) {\n\t\t\treturn this.options.ticks.rCallback.apply(this, [tick, index, ticks]);\n\t\t}, this);\n\n\t\tthis.xLabels = this.xTicks.map(function(tick, index, ticks) {\n\t\t\treturn this.options.ticks.xCallback.apply(this, [tick, index, ticks]);\n\t\t}, this);\n\n\t\t// Need to do this to make the core scale work\n\t\treturn [];\n\t},\n\n\tcalculateTickRotation: helpers.noop,\n\n\t// fit function similar to the radial linear scale\n\tfit: function() {\n\t\tthis.xCenter = (this.left + this.right) / 2;\n\t\tthis.yCenter = (this.top + this.bottom) / 2;\n\t\tvar fontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\n\t\tif (this.options.ticks.display) {\n\t\t\tvar fontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\tvar fontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tthis.ctx.font = labelFont;\n\n\t\t\tvar xLabelLengths = this.xLabels.map(function(tick) {\n\t\t\t\treturn this.ctx.measureText(tick).width;\n\t\t\t}, this);\n\n\t\t\t// Figure out where these points will go, and assuming they are drawn there, how much will it go outside of the chart area.\n\t\t\t// We use that to determine how much padding we nede on each side\n\t\t\tthis.minDimension = Math.min(this.right - this.left, this.bottom - this.top);\n\n\t\t\thelpers.each(this.xTicks, function(xTick, index) {\n\t\t\t\tif (xTick !== 0) {\n\t\t\t\t\tvar halfDimension = this.minDimension / 2;\n\t\t\t\t\tvar labelStart = this.getPointPosition(0, xTick);\n\t\t\t\t\tvar cosPhi = (labelStart.x - this.xCenter) / halfDimension;\n\t\t\t\t\tvar sinPhi = (labelStart.y - this.yCenter) / halfDimension;\n\t\t\t\t\tvar labelWidth = xLabelLengths[index] + this.options.ticks.padding;\n\t\t\t\t\tvar pts = [{\n\t\t\t\t\t\tx: labelStart.x + (cosPhi * labelWidth) + (sinPhi * fontSize),\n\t\t\t\t\t\ty: labelStart.y + (sinPhi * labelWidth) - (cosPhi * fontSize)\n\t\t\t\t\t}, {\n\t\t\t\t\t\tx: labelStart.x + (cosPhi * labelWidth) - (sinPhi * fontSize),\n\t\t\t\t\t\ty: labelStart.y + (sinPhi * labelWidth) + (cosPhi * fontSize)\n\t\t\t\t\t}];\n\n\t\t\t\t\thelpers.each(pts, function(pt) {\n\t\t\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft, this.left - pt.x);\n\t\t\t\t\t\tthis.paddingTop = Math.max(this.paddingTop, this.top - pt.y);\n\t\t\t\t\t\tthis.paddingRight = Math.max(this.paddingRight, pt.x - this.right);\n\t\t\t\t\t\tthis.paddingBottom = Math.max(this.paddingBottom, pt.y - this.bottom);\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t}\n\n\t\tthis.minDimension = Math.min(this.right - this.left - this.paddingLeft - this.paddingRight, this.bottom - this.top - this.paddingBottom - this.paddingTop);\n\n\t\t// Store data about the arcs that we will draw\n\t\tthis.arcs = [];\n\t\tthis.rLabelPoints = [];\n\t\tthis.xLabelPoints = [];\n\n\t\t// How do we draw the circles? From http://care.iitd.ac.in/People/Faculty/bspanwar/crl713/smith_chart_basics.pdf\n\t\t// we have that constant resistance circles obey the following\n\t\t// Center { r / (1 + r), 0}, Radius = 1 / (1 + r)\n\t\t//\n\t\t// The center point and radius will need to be scaled based on the size of the canvas\n\t\t// Draw each of the circles\n\t\thelpers.each(this.rTicks, function(r) {\n\t\t\tvar radius = 1 / (1 + r) * (this.minDimension / 2); // scale for the min dimension\n\t\t\tvar x = this.xCenter + ((r / (1 + r)) * (this.minDimension / 2));\n\n\t\t\tthis.arcs.push({\n\t\t\t\tx: x,\n\t\t\t\ty: this.yCenter,\n\t\t\t\tr: radius,\n\t\t\t\ts: 0,\n\t\t\t\te: 2 * Math.PI,\n\t\t\t\tcc: false\n\t\t\t});\n\n\t\t\tthis.rLabelPoints.push({\n\t\t\t\tx: x - radius,\n\t\t\t\ty: this.yCenter\n\t\t\t});\n\t\t}, this);\n\n\t\thelpers.each(this.xTicks, function(x) {\n\t\t\tif (x !== 0) {\n\t\t\t\tvar xRadius = (1 / Math.abs(x)) * (this.minDimension / 2);\n\t\t\t\tvar xCoord = this.xCenter + (this.minDimension / 2); // far right side of the drawing area\n\t\t\t\tvar yCoord = x > 0 ? this.yCenter - xRadius : this.yCenter + xRadius;\n\n\t\t\t\t// Ok, these circles are a pain. They need to only be drawn in the region that intersects the\n\t\t\t\t// resistance == 0 circle. This circle has a radius of 0.5 * this.minDimension and is centered\n\t\t\t\t// at (xCenter, yCenter). We will solve the intersection in polar coordinates and define the\n\t\t\t\t// center of our coordinate system as the center of the xCircle, ie (xCoord, yCoord)\n\n\t\t\t\tvar r0 = Math.sqrt(Math.pow(xCoord - this.xCenter, 2) + Math.pow(yCoord - this.yCenter, 2));\n\t\t\t\tvar phi0 = Math.atan2(this.yCenter - yCoord, this.xCenter - xCoord);\n\n\t\t\t\t// A circle with center location r0,phi0 with radius a is defined in polar coordinates by the equation\n\t\t\t\t// r = r0 * cos(phi - phi0) + sqrt(a^2 - ((r0^2) * sin^2(phi - phi0)))\n\t\t\t\t// Our xCircle is defined by r = xRadius because of where we defined the 0,0 point\n\t\t\t\t// Solving the intersection of these equations yields\n\t\t\t\t// phi = 0.5 * arccos((xRadius^2 - a^2) / (r0^2)) + phi0\n\t\t\t\tvar arccos = Math.acos((Math.pow(xRadius, 2) - Math.pow(this.minDimension / 2, 2)) / Math.pow(r0, 2));\n\t\t\t\tvar phi2 = ((x > 0 ? 0.5 : -0.5) * arccos) + phi0;\n\t\t\t\tvar startAngle = x > 0 ? 0.5 * Math.PI : -0.5 * Math.PI;\n\n\t\t\t\tthis.arcs.push({\n\t\t\t\t\tx: xCoord,\n\t\t\t\t\ty: yCoord,\n\t\t\t\t\tr: xRadius,\n\t\t\t\t\ts: startAngle,\n\t\t\t\t\te: phi2,\n\t\t\t\t\tcc: x > 0 ? false : true\n\t\t\t\t});\n\n\t\t\t\tthis.xLabelPoints.push({\n\t\t\t\t\tx: xCoord + (Math.cos(phi2) * xRadius),\n\t\t\t\t\ty: yCoord + (Math.sin(phi2) * xRadius),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.xLabelPoints.push(null);\n\t\t\t}\n\t\t}, this);\n\t},\n\n\t// Need a custom draw function here\n\tdraw: function() {\n\t\tif (this.options.display) {\n\t\t\tif (this.options.gridLines.display) {\n\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.color;\n\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.lineWidth;\n\n\t\t\t\t// Draw horizontal line for x === 0\n\t\t\t\tthis.ctx.beginPath();\n\t\t\t\tthis.ctx.moveTo(this.xCenter - (this.minDimension / 2), this.yCenter);\n\t\t\t\tthis.ctx.lineTo(this.xCenter + (this.minDimension / 2), this.yCenter);\n\t\t\t\tthis.ctx.stroke();\n\n\t\t\t\t// Draw each of the arcs\n\t\t\t\thelpers.each(this.arcs, function(arc) {\n\t\t\t\t\tthis.ctx.beginPath();\n\t\t\t\t\tthis.ctx.arc(arc.x, arc.y, arc.r, arc.s, arc.e, arc.cc);\n\t\t\t\t\tthis.ctx.stroke();\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\t// Simply draw a border line\n\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.color;\n\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.lineWidth;\n\t\t\t\tthis.ctx.beginPath();\n\t\t\t\tthis.ctx.arc(this.xCenter, this.yCenter, this.minDimension / 2, 0, 2 * Math.PI, false);\n\t\t\t\tthis.ctx.stroke();\n\t\t\t}\n\n\t\t\tif (this.options.ticks.display) {\n\t\t\t\tvar fontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tvar fontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\t\tvar fontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\n\t\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\t\tthis.ctx.font = labelFont;\n\n\t\t\t\tthis.ctx.fillStyle = helpers.getValueOrDefault(this.options.ticks.fontColor, Chart.defaults.global.defaultFontColor);\n\n\t\t\t\thelpers.each(this.rLabels, function(rLabel, index) {\n\t\t\t\t\tvar pt = this.rLabelPoints[index];\n\n\t\t\t\t\tthis.ctx.save();\n\t\t\t\t\tthis.ctx.translate(pt.x, pt.y);\n\t\t\t\t\tthis.ctx.rotate(-0.5 * Math.PI);\n\t\t\t\t\tthis.ctx.textBaseline = 'middle';\n\t\t\t\t\tthis.ctx.textAlign = 'center';\n\t\t\t\t\tthis.ctx.fillText(rLabel, 0, 0);\n\t\t\t\t\tthis.ctx.restore();\n\t\t\t\t}, this);\n\n\t\t\t\thelpers.each(this.xLabels, function(xLabel, index) {\n\t\t\t\t\tvar pt = this.xLabelPoints[index];\n\n\t\t\t\t\tif (pt) {\n\t\t\t\t\t\tvar align = 'left';\n\t\t\t\t\t\tvar ang = Math.atan2(pt.y - this.yCenter, pt.x - this.xCenter);\n\t\t\t\t\t\tvar textPadding = this.options.ticks.padding;\n\n\t\t\t\t\t\tif (pt.x < this.xCenter) {\n\t\t\t\t\t\t\tang += Math.PI;\n\t\t\t\t\t\t\talign = 'right';\n\t\t\t\t\t\t\ttextPadding *= -1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.ctx.save();\n\t\t\t\t\t\tthis.ctx.translate(pt.x, pt.y);\n\t\t\t\t\t\tthis.ctx.rotate(ang);\n\t\t\t\t\t\tthis.ctx.textBaseline = 'middle';\n\t\t\t\t\t\tthis.ctx.textAlign = align;\n\t\t\t\t\t\tthis.ctx.fillText(xLabel, textPadding, 0);\n\t\t\t\t\t\tthis.ctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetPointPosition: function(real, imag) {\n\t\t// look for the intersection of the r circle and the x circle that is not the one along the right side of the canvas\n\t\tvar realRadius = 1 / (1 + real) * (this.minDimension / 2); // scale for the minDimension size\n\t\tvar realCenterX = this.xCenter + ((real / (1 + real)) * (this.minDimension / 2));\n\t\tvar realCenterY = this.yCenter;\n\n\t\tvar imagRadius = (1 / Math.abs(imag)) * (this.minDimension / 2);\n\t\tvar imagCenterX = this.xCenter + (this.minDimension / 2); // far right side of the drawing area\n\t\tvar imagCenterY = imag > 0 ? this.yCenter - imagRadius : this.yCenter + imagRadius;\n\n\t\tvar r0 = Math.sqrt(Math.pow(imagCenterX - realCenterX, 2) + Math.pow(imagCenterY - realCenterY, 2));\n\t\tvar angle = Math.atan2(realCenterY - imagCenterY, realCenterX - imagCenterX);\n\t\tvar arccos = Math.acos((Math.pow(imagRadius, 2) - Math.pow(realRadius, 2)) / Math.pow(r0, 2));\n\t\tvar phi = imag > 0 ? 0.5 * arccos + angle : -0.5 * arccos + angle;\n\n\t\t// We have an r and a phi from the point (imagCenterX, imagCenterY)\n\t\t// translate to an x and a undefined\n\t\treturn {\n\t\t\tx: imag === 0 ? realCenterX - realRadius : (Math.cos(phi) * imagRadius) + imagCenterX,\n\t\t\ty: imag === 0 ? this.yCenter : (Math.sin(phi) * imagRadius) + imagCenterY\n\t\t};\n\t},\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar d = this.chart.data.datasets[datasetIndex].data[index];\n\t\treturn d.real + ' + ' + d.imag + 'i';\n\t}\n});\n\nexport {defaults};\nexport default SmithScale;\n","import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Col, Container, Row } from 'reactstrap';\nimport SmithChart from '../../Smith/Smith';\n\nconst config = {\n    datasets : [ {\n      label : \"S11\",\n      data : JSON\n          .parse('[{\"freq\": 0.3,\"real\": 151.14742553365596,\"imag\": 253.0053228776592}, {\"freq\": 15.299,\"real\": -27.159231461863005,\"imag\": -165.75336624599913}, {\"freq\": 30.297,\"real\": -4.915259581555179,\"imag\": -46.91550388693526}, {\"freq\": 45.295,\"real\": -0.6755848338189815,\"imag\": -34.72928585637756}, {\"freq\": 60.294,\"real\": 1.3657145546447806,\"imag\": -43.23255005732526}, {\"freq\": 75.293,\"real\": 0.08830733106688782,\"imag\": -32.00637351382851}, {\"freq\": 90.291,\"real\": 0.8258298157764316,\"imag\": -21.10737592230326}, {\"freq\": 105.29,\"real\": 0.8070778923113036,\"imag\": -18.514195832088852}, {\"freq\": 120.288,\"real\": 0.009462877127689659,\"imag\": -21.81608129140232}, {\"freq\": 135.286,\"real\": 0.9336708219102,\"imag\": -16.817373959881948}, {\"freq\": 150.285,\"real\": 0.28822199427928297,\"imag\": -13.944362560890598}, {\"freq\": 165.284,\"real\": 0.4286708506596474,\"imag\": -12.543606546838372}, {\"freq\": 180.282,\"real\": 0.8847290299691937,\"imag\": -12.974468935591549}, {\"freq\": 195.28,\"real\": 0.6858995522499026,\"imag\": -12.079976698463648}, {\"freq\": 210.279,\"real\": 0.522288657490578,\"imag\": -10.433476458990873}, {\"freq\": 225.278,\"real\": 0.4565953553118529,\"imag\": -9.541093619294186}, {\"freq\": 240.276,\"real\": 0.35524965582175605,\"imag\": -9.53448244222659}, {\"freq\": 255.274,\"real\": 0.4267878628833673,\"imag\": -9.038500117001893}, {\"freq\": 270.273,\"real\": 0.37621938362324764,\"imag\": -7.985673491470832}, {\"freq\": 285.272,\"real\": 0.37102187986424634,\"imag\": -7.537452390540717}, {\"freq\": 300.27,\"real\": 0.48375898609930534,\"imag\": -7.48589635968668}, {\"freq\": 315.269,\"real\": 0.4018604655073068,\"imag\": -7.341263332643548}, {\"freq\": 330.267,\"real\": 0.18411017012834996,\"imag\": -6.669227789595368}, {\"freq\": 345.265,\"real\": 0.2575862752299726,\"imag\": -6.232758195568302}, {\"freq\": 360.264,\"real\": 0.4545073515458803,\"imag\": -6.18186142804445}, {\"freq\": 375.262,\"real\": 0.3829083911525743,\"imag\": -6.079244779877945}, {\"freq\": 390.261,\"real\": 0.35047687465079436,\"imag\": -5.633495391649071}, {\"freq\": 405.26,\"real\": 0.40707258833190396,\"imag\": -5.476228529010664}, {\"freq\": 420.258,\"real\": 0.39512385785992993,\"imag\": -5.368122316830615}, {\"freq\": 435.257,\"real\": 0.2612644062465956,\"imag\": -5.297047218701098}, {\"freq\": 450.255,\"real\": 0.27264579739911277,\"imag\": -4.921480994757896}, {\"freq\": 465.253,\"real\": 0.35047778023480075,\"imag\": -4.7578705579624305}, {\"freq\": 480.252,\"real\": 0.3234454889563416,\"imag\": -4.505189239959398}, {\"freq\": 495.25,\"real\": 0.3047730292754791,\"imag\": -4.638165470771953}, {\"freq\": 510.249,\"real\": 0.2832234981390005,\"imag\": -4.576223411208277}, {\"freq\": 525.247,\"real\": 0.2555282545646627,\"imag\": -4.2851316466700995}, {\"freq\": 540.246,\"real\": 0.23137618785740882,\"imag\": -4.131105815701642}, {\"freq\": 555.245,\"real\": 0.2361942887264111,\"imag\": -4.008801089470978}, {\"freq\": 570.243,\"real\": 0.26994252168781113,\"imag\": -4.00540414086278}, {\"freq\": 585.241,\"real\": 0.2898752921204202,\"imag\": -3.9711380440708193}, {\"freq\": 600.24,\"real\": 0.24104754416409208,\"imag\": -3.722913938227382}, {\"freq\": 615.239,\"real\": 0.2130575650338252,\"imag\": -3.7522214323008383}, {\"freq\": 630.237,\"real\": 0.21409154322038548,\"imag\": -3.5895893978385987}, {\"freq\": 645.236,\"real\": 0.2115111829931843,\"imag\": -3.5420744478148207}, {\"freq\": 660.234,\"real\": 0.19702798977893024,\"imag\": -3.4134690463927795}, {\"freq\": 675.232,\"real\": 0.19121855177913927,\"imag\": -3.3326418047299855}, {\"freq\": 690.231,\"real\": 0.18623951689966434,\"imag\": -3.367613508547331}, {\"freq\": 705.23,\"real\": 0.15525885282395266,\"imag\": -3.272720185306615}, {\"freq\": 720.228,\"real\": 0.17285071631354595,\"imag\": -3.2015443230779286}, {\"freq\": 735.226,\"real\": 0.14843917413506172,\"imag\": -3.131698548471033}, {\"freq\": 750.225,\"real\": 0.15296289732918963,\"imag\": -3.169072471579856}, {\"freq\": 765.223,\"real\": 0.16437995152636906,\"imag\": -3.0900913792393214}, {\"freq\": 780.222,\"real\": 0.14302381704611164,\"imag\": -2.9418629928424385}, {\"freq\": 795.221,\"real\": 0.13548344892589023,\"imag\": -2.9386861434820206}, {\"freq\": 810.219,\"real\": 0.15015153664033828,\"imag\": -2.9240379046855764}, {\"freq\": 825.217,\"real\": 0.12762234259698962,\"imag\": -2.9183063807871923}, {\"freq\": 840.216,\"real\": 0.09879027658425568,\"imag\": -2.81762340697658}, {\"freq\": 855.215,\"real\": 0.127278036202696,\"imag\": -2.7194038953418516}, {\"freq\": 870.213,\"real\": 0.12736138507138345,\"imag\": -2.7210346927125655}, {\"freq\": 885.212,\"real\": 0.10553686370033259,\"imag\": -2.7713280243642875}, {\"freq\": 900.21,\"real\": 0.11541928867668326,\"imag\": -2.6500723473295844}, {\"freq\": 915.208,\"real\": 0.10255487915398927,\"imag\": -2.590842312233359}, {\"freq\": 930.207,\"real\": 0.10168764884983233,\"imag\": -2.5798193277907973}, {\"freq\": 945.206,\"real\": 0.09740454940657126,\"imag\": -2.615389503488682}, {\"freq\": 960.204,\"real\": 0.0985436039163925,\"imag\": -2.4797416094901217}, {\"freq\": 975.202,\"real\": 0.10498042458053765,\"imag\": -2.4232532894251557}, {\"freq\": 990.201,\"real\": 0.08833063383177192,\"imag\": -2.394027178262673}, {\"freq\": 1005.199,\"real\": 0.11626485854939106,\"imag\": -2.422278620347608}, {\"freq\": 1020.198,\"real\": 0.0769990898094706,\"imag\": -2.323753182553852}, {\"freq\": 1035.197,\"real\": 0.06764378124113685,\"imag\": -2.2529738603175207}, {\"freq\": 1050.195,\"real\": 0.09303494026160147,\"imag\": -2.2711916826041723}, {\"freq\": 1065.194,\"real\": 0.09642016114588868,\"imag\": -2.268794123685281}, {\"freq\": 1080.192,\"real\": 0.08605067506025516,\"imag\": -2.208773366547928}, {\"freq\": 1095.19,\"real\": 0.09548091671608482,\"imag\": -2.1420966019201697}, {\"freq\": 1110.189,\"real\": 0.08608377498053522,\"imag\": -2.145686701557909}, {\"freq\": 1125.188,\"real\": 0.0922745727102575,\"imag\": -2.136265173779969}, {\"freq\": 1140.186,\"real\": 0.08416975061352142,\"imag\": -2.0688996406995477}, {\"freq\": 1155.185,\"real\": 0.08639785461379838,\"imag\": -1.9750862257889605}, {\"freq\": 1170.183,\"real\": 0.08076859955815249,\"imag\": -1.9431372440853103}, {\"freq\": 1185.181,\"real\": 0.09416769611720226,\"imag\": -1.969358112746124}, {\"freq\": 1200.18,\"real\": 0.09351484800856483,\"imag\": -1.926815849021529}, {\"freq\": 1215.178,\"real\": 0.09209984305422696,\"imag\": -1.8460680609469087}, {\"freq\": 1230.177,\"real\": 0.0875958444641845,\"imag\": -1.8174289388272442}, {\"freq\": 1245.176,\"real\": 0.09482254598296216,\"imag\": -1.8609486206658201}, {\"freq\": 1260.174,\"real\": 0.09543036052935344,\"imag\": -1.8096578513063104}, {\"freq\": 1275.172,\"real\": 0.09353072740659346,\"imag\": -1.7471383325179148}, {\"freq\": 1290.171,\"real\": 0.10424277244143912,\"imag\": -1.7103061636754737}, {\"freq\": 1305.169,\"real\": 0.10246625565731501,\"imag\": -1.7144287024757052}, {\"freq\": 1320.168,\"real\": 0.09963365207459432,\"imag\": -1.6579251549788103}, {\"freq\": 1335.167,\"real\": 0.09949123502620588,\"imag\": -1.6198309724189213}, {\"freq\": 1350.165,\"real\": 0.0974056625912593,\"imag\": -1.609091208448599}, {\"freq\": 1365.164,\"real\": 0.10332344275678074,\"imag\": -1.5973679963093181}, {\"freq\": 1380.162,\"real\": 0.09861278569546793,\"imag\": -1.5764016003767594}, {\"freq\": 1395.16,\"real\": 0.09909458115013675,\"imag\": -1.539821557153744}, {\"freq\": 1410.159,\"real\": 0.10285715201565225,\"imag\": -1.4994528253190875}, {\"freq\": 1425.158,\"real\": 0.10013083503921492,\"imag\": -1.495753850383136}, {\"freq\": 1440.156,\"real\": 0.10453873891965784,\"imag\": -1.4809097574446695}, {\"freq\": 1455.155,\"real\": 0.10431134858817802,\"imag\": -1.441836097275288}, {\"freq\": 1470.153,\"real\": 0.10789209012877093,\"imag\": -1.4023069034876465}, {\"freq\": 1485.151,\"real\": 0.1050378246049155,\"imag\": -1.4046652790752732}, {\"freq\": 1500.15,\"real\": 0.09957435368967471,\"imag\": -1.3658522527766155}, {\"freq\": 1515.149,\"real\": 0.10305753873239182,\"imag\": -1.3422260488156994}, {\"freq\": 1530.147,\"real\": 0.10093020851309809,\"imag\": -1.33347103718327}, {\"freq\": 1545.146,\"real\": 0.10416010407036161,\"imag\": -1.3240196515604787}, {\"freq\": 1560.144,\"real\": 0.10380990635310039,\"imag\": -1.3119884007182214}, {\"freq\": 1575.142,\"real\": 0.10233172488495432,\"imag\": -1.287967904437604}, {\"freq\": 1590.141,\"real\": 0.09858615546533793,\"imag\": -1.2634459384885102}, {\"freq\": 1605.139,\"real\": 0.10291156300640404,\"imag\": -1.2327544336191811}, {\"freq\": 1620.138,\"real\": 0.09680780426401554,\"imag\": -1.2301392468348897}, {\"freq\": 1635.137,\"real\": 0.10380471560137514,\"imag\": -1.230134268649273}, {\"freq\": 1650.135,\"real\": 0.09040443184101962,\"imag\": -1.182183384617878}, {\"freq\": 1665.133,\"real\": 0.09307364082940162,\"imag\": -1.1616134524193296}, {\"freq\": 1680.132,\"real\": 0.08909869161967135,\"imag\": -1.148864388844688}, {\"freq\": 1695.13,\"real\": 0.08875358467098977,\"imag\": -1.1499121976242892}, {\"freq\": 1710.129,\"real\": 0.08707470356029848,\"imag\": -1.1369359199336293}, {\"freq\": 1725.128,\"real\": 0.07860206476755956,\"imag\": -1.105980045345962}, {\"freq\": 1740.126,\"real\": 0.08278773137969477,\"imag\": -1.117010970421323}, {\"freq\": 1755.124,\"real\": 0.07981599428660577,\"imag\": -1.113215556541475}, {\"freq\": 1770.123,\"real\": 0.07972495013976436,\"imag\": -1.0887375756492705}, {\"freq\": 1785.121,\"real\": 0.07748482067234506,\"imag\": -1.0698086282961483}, {\"freq\": 1800.12,\"real\": 0.07502458825335205,\"imag\": -1.0721297817470496}, {\"freq\": 1815.119,\"real\": 0.07019674019290202,\"imag\": -1.0629228324442195}, {\"freq\": 1830.117,\"real\": 0.07196481507888354,\"imag\": -1.0493965104692975}, {\"freq\": 1845.116,\"real\": 0.06662260194357729,\"imag\": -1.0166493972781265}, {\"freq\": 1860.114,\"real\": 0.060031732498586524,\"imag\": -1.0178826427940504}, {\"freq\": 1875.112,\"real\": 0.06195340067727167,\"imag\": -1.0438290815498983}, {\"freq\": 1890.111,\"real\": 0.058374880301345036,\"imag\": -1.0164007186989377}, {\"freq\": 1905.11,\"real\": 0.05906918436481895,\"imag\": -1.0102683660893264}, {\"freq\": 1920.108,\"real\": 0.05910288226453452,\"imag\": -1.0019160203489685}, {\"freq\": 1935.107,\"real\": 0.05128291171542069,\"imag\": -0.9949450415311571}, {\"freq\": 1950.105,\"real\": 0.04920799073251658,\"imag\": -0.9844162832089074}, {\"freq\": 1965.103,\"real\": 0.050952091982600194,\"imag\": -0.9768888960667977}, {\"freq\": 1980.102,\"real\": 0.049652022817815736,\"imag\": -0.9711854402593076}, {\"freq\": 1995.101,\"real\": 0.04292513645097653,\"imag\": -0.957178610842981}, {\"freq\": 2010.099,\"real\": 0.042236368086144234,\"imag\": -0.9507037897726357}, {\"freq\": 2025.098,\"real\": 0.0386046867917379,\"imag\": -0.9479072757315387}, {\"freq\": 2040.096,\"real\": 0.03957773701848413,\"imag\": -0.9408300636250971}, {\"freq\": 2055.095,\"real\": 0.03464561385018124,\"imag\": -0.9217404881415464}, {\"freq\": 2070.093,\"real\": 0.03289421433571491,\"imag\": -0.9197779553083865}, {\"freq\": 2085.091,\"real\": 0.03238448102323899,\"imag\": -0.9137143948395903}, {\"freq\": 2100.09,\"real\": 0.03369302630426339,\"imag\": -0.8990458898391183}, {\"freq\": 2115.088,\"real\": 0.03077350270378276,\"imag\": -0.8925592020131898}, {\"freq\": 2130.087,\"real\": 0.025397279197706287,\"imag\": -0.8916053980697192}, {\"freq\": 2145.086,\"real\": 0.023473865392285628,\"imag\": -0.8815983916464953}, {\"freq\": 2160.084,\"real\": 0.02503193784103881,\"imag\": -0.8734044900933472}, {\"freq\": 2175.082,\"real\": 0.021926285624929084,\"imag\": -0.8651879290807434}, {\"freq\": 2190.081,\"real\": 0.02181172601690598,\"imag\": -0.8586597450021687}, {\"freq\": 2205.079,\"real\": 0.019241231429647968,\"imag\": -0.8542654793542925}, {\"freq\": 2220.078,\"real\": 0.022218975863115803,\"imag\": -0.8488779291891934}, {\"freq\": 2235.077,\"real\": 0.021502309601443857,\"imag\": -0.8415433660881011}, {\"freq\": 2250.075,\"real\": 0.01767441810216932,\"imag\": -0.8289173278661975}, {\"freq\": 2265.073,\"real\": 0.0173899011444717,\"imag\": -0.8216777803058315}, {\"freq\": 2280.072,\"real\": 0.0176890435308587,\"imag\": -0.8146432771750179}, {\"freq\": 2295.07,\"real\": 0.022251217387980055,\"imag\": -0.8021841000207631}, {\"freq\": 2310.069,\"real\": 0.023627623080928944,\"imag\": -0.7931382845095176}, {\"freq\": 2325.068,\"real\": 0.020347101307373987,\"imag\": -0.7910745288351142}, {\"freq\": 2340.066,\"real\": 0.020676309167281706,\"imag\": -0.7799621690686548}, {\"freq\": 2355.064,\"real\": 0.021506949136728962,\"imag\": -0.7696789309003342}, {\"freq\": 2370.063,\"real\": 0.02115775057988514,\"imag\": -0.7648390916760753}, {\"freq\": 2385.061,\"real\": 0.02149294978138802,\"imag\": -0.7529464525001849}, {\"freq\": 2400.06,\"real\": 0.022020640627058715,\"imag\": -0.7430122682148674}, {\"freq\": 2415.059,\"real\": 0.026612052883167807,\"imag\": -0.7437607576022451}, {\"freq\": 2430.057,\"real\": 0.028726134050597624,\"imag\": -0.7232938423519693}, {\"freq\": 2445.055,\"real\": 0.029818991086210483,\"imag\": -0.7117011248696832}, {\"freq\": 2460.054,\"real\": 0.03080887768619528,\"imag\": -0.7058955762832195}, {\"freq\": 2475.052,\"real\": 0.034625609448507726,\"imag\": -0.696196017021295}, {\"freq\": 2490.051,\"real\": 0.035109387404955075,\"imag\": -0.6890363373605044}, {\"freq\": 2505.05,\"real\": 0.03496569781681806,\"imag\": -0.6724072271663152}, {\"freq\": 2520.048,\"real\": 0.03659613283081683,\"imag\": -0.6621823096579309}, {\"freq\": 2535.046,\"real\": 0.0393431296217279,\"imag\": -0.6507601512947194}, {\"freq\": 2550.045,\"real\": 0.04305549585062811,\"imag\": -0.6416626762121971}, {\"freq\": 2565.044,\"real\": 0.04292387343837047,\"imag\": -0.6284658860280203}, {\"freq\": 2580.042,\"real\": 0.044454939403709676,\"imag\": -0.6181644259275726}, {\"freq\": 2595.041,\"real\": 0.045714935853610736,\"imag\": -0.6077431442095218}, {\"freq\": 2610.039,\"real\": 0.04800433289007612,\"imag\": -0.5977622068759813}, {\"freq\": 2625.037,\"real\": 0.051148654258767565,\"imag\": -0.5829203039021245}, {\"freq\": 2640.036,\"real\": 0.05243099298671674,\"imag\": -0.5761435644234965}, {\"freq\": 2655.035,\"real\": 0.04966431890938094,\"imag\": -0.5726109789284813}, {\"freq\": 2670.033,\"real\": 0.05159109608364264,\"imag\": -0.5625450622798495}, {\"freq\": 2685.032,\"real\": 0.05619404165798093,\"imag\": -0.5484290058635708}, {\"freq\": 2700.03,\"real\": 0.05741861790090412,\"imag\": -0.5413878079399317}, {\"freq\": 2715.028,\"real\": 0.05804389257533794,\"imag\": -0.5329491616403649}, {\"freq\": 2730.027,\"real\": 0.05967148240397721,\"imag\": -0.5222257210659016}, {\"freq\": 2745.026,\"real\": 0.06202301388618468,\"imag\": -0.5062866213247973}, {\"freq\": 2760.024,\"real\": 0.06272206066425713,\"imag\": -0.49936986141761475}, {\"freq\": 2775.023,\"real\": 0.06028814780710513,\"imag\": -0.483827470870464}, {\"freq\": 2790.021,\"real\": 0.06043792113585979,\"imag\": -0.4800928899198571}, {\"freq\": 2805.019,\"real\": 0.06170355816330801,\"imag\": -0.4687601223837228}, {\"freq\": 2820.018,\"real\": 0.061353953536549675,\"imag\": -0.46031528501766433}, {\"freq\": 2835.017,\"real\": 0.061182426255249875,\"imag\": -0.45519632855123693}, {\"freq\": 2850.015,\"real\": 0.062094211213890464,\"imag\": -0.45507736634992996}, {\"freq\": 2865.014,\"real\": 0.06345293029819868,\"imag\": -0.44345287683530843}, {\"freq\": 2880.012,\"real\": 0.06370013929553363,\"imag\": -0.4357946026496319}, {\"freq\": 2895.01,\"real\": 0.06070077679484061,\"imag\": -0.4282379994510555}, {\"freq\": 2910.009,\"real\": 0.06227726329282122,\"imag\": -0.4219266614029882}, {\"freq\": 2925.008,\"real\": 0.06205050056234419,\"imag\": -0.41302776582377837}, {\"freq\": 2940.006,\"real\": 0.05980314132123107,\"imag\": -0.407151513045164}, {\"freq\": 2955.005,\"real\": 0.056236076585154594,\"imag\": -0.4050543727465697}, {\"freq\": 2970.003,\"real\": 0.05563443659990653,\"imag\": -0.3992474442127859}, {\"freq\": 2985.001,\"real\": 0.053765631314169435,\"imag\": -0.39800525885550164}, {\"freq\": 3000.0,\"real\": 0.054700467422911965,\"imag\": -0.3929263769633056}]'),\n          fill : false,\n          radius:0,\n      backgroundColor : \"rgb(255, 99, 132)\",\n      borderColor : \"rgb(255, 99, 132)\"\n    } ]\n  }\n\n\nconst config2 = {\n    datasets : [ {\n      label : \"S11\",\n      data : JSON\n          .parse('[{\"freq\": 0.3,\"real\": 123.54260015425344,\"imag\": 244.5090757683302}, {\"freq\": 15.299,\"real\": -32.32488121126374,\"imag\": 296.45178875279777}, {\"freq\": 30.297,\"real\": -60.26290641796553,\"imag\": -199.16503310876755}, {\"freq\": 45.295,\"real\": 7.547862311429112,\"imag\": -160.55723936762828}, {\"freq\": 60.294,\"real\": 317.19415036147143,\"imag\": -605.5168473787887}, {\"freq\": 75.293,\"real\": 1001.6729579055616,\"imag\": 572.3159275679133}, {\"freq\": 90.291,\"real\": 11.251750335117737,\"imag\": -81.09418378845491}, {\"freq\": 105.29,\"real\": 14.037379449069618,\"imag\": -94.41267014187834}, {\"freq\": 120.288,\"real\": 809.3687894389875,\"imag\": -153.98969983352157}, {\"freq\": 135.286,\"real\": 122.38888097834662,\"imag\": -219.53647402213815}, {\"freq\": 150.285,\"real\": 10.686307081268344,\"imag\": -89.25233713137196}, {\"freq\": 165.284,\"real\": 25.333380169149866,\"imag\": -85.04238136843156}, {\"freq\": 180.282,\"real\": 140.75732459816896,\"imag\": -103.52285649564423}, {\"freq\": 195.28,\"real\": 68.32048609312906,\"imag\": -82.02495528795681}, {\"freq\": 210.279,\"real\": 54.21665930079589,\"imag\": -99.16955041243493}, {\"freq\": 225.278,\"real\": 17.08238704517898,\"imag\": -62.517778899322145}, {\"freq\": 240.276,\"real\": 67.13205383652345,\"imag\": -116.69982420341341}, {\"freq\": 255.274,\"real\": 111.17773112254582,\"imag\": -129.41658569113363}, {\"freq\": 270.273,\"real\": 33.99400192833959,\"imag\": -60.0103893661077}, {\"freq\": 285.272,\"real\": 22.203611584744184,\"imag\": -62.78987138391339}, {\"freq\": 300.27,\"real\": 33.677139100299506,\"imag\": -50.469259207489074}, {\"freq\": 315.269,\"real\": 70.71985901780067,\"imag\": -58.99251507486357}, {\"freq\": 330.267,\"real\": 32.62699859251871,\"imag\": -74.14922889059784}, {\"freq\": 345.265,\"real\": 18.76336300000964,\"imag\": -43.723352648026456}, {\"freq\": 360.264,\"real\": 46.96511299986838,\"imag\": -45.3277645570853}, {\"freq\": 375.262,\"real\": 70.05436308101812,\"imag\": -49.651267792745344}, {\"freq\": 390.261,\"real\": 45.51437252687036,\"imag\": -44.36352850566637}, {\"freq\": 405.26,\"real\": 42.820242334383245,\"imag\": -35.765204815790916}, {\"freq\": 420.258,\"real\": 42.00789098600534,\"imag\": -45.967526722946744}, {\"freq\": 435.257,\"real\": 59.759781255950074,\"imag\": -53.844995122421274}, {\"freq\": 450.255,\"real\": 28.935653356320515,\"imag\": -44.65592625985134}, {\"freq\": 465.253,\"real\": 26.621603866269126,\"imag\": -36.40105949645908}, {\"freq\": 480.252,\"real\": 19.45566478779821,\"imag\": -31.109458749027517}, {\"freq\": 495.25,\"real\": 46.49154888194493,\"imag\": -33.45244353450241}, {\"freq\": 510.249,\"real\": 53.730276200607044,\"imag\": -33.5190453672008}, {\"freq\": 525.247,\"real\": 34.41609781028296,\"imag\": -37.11702380595656}, {\"freq\": 540.246,\"real\": 30.282033843240995,\"imag\": -35.52942391857588}, {\"freq\": 555.245,\"real\": 33.66392878305705,\"imag\": -35.83373524482305}, {\"freq\": 570.243,\"real\": 53.57478842043034,\"imag\": -25.09191895212769}, {\"freq\": 585.241,\"real\": 55.57737294043376,\"imag\": -17.117726117508727}, {\"freq\": 600.24,\"real\": 32.496073212734565,\"imag\": -27.723517060585777}, {\"freq\": 615.239,\"real\": 44.065672784897515,\"imag\": -36.13431838776443}, {\"freq\": 630.237,\"real\": 50.345287101123255,\"imag\": -28.54442635220682}, {\"freq\": 645.236,\"real\": 50.46657772502248,\"imag\": -24.17063695739077}, {\"freq\": 660.234,\"real\": 37.85652765076193,\"imag\": -33.143473164231445}, {\"freq\": 675.232,\"real\": 40.281074473292946,\"imag\": -30.148875607647735}, {\"freq\": 690.231,\"real\": 63.02029108211134,\"imag\": -13.997617885388092}, {\"freq\": 705.23,\"real\": 60.69555432073901,\"imag\": -26.34159340170564}, {\"freq\": 720.228,\"real\": 54.55529157112289,\"imag\": -25.12046528416642}, {\"freq\": 735.226,\"real\": 43.173814019194154,\"imag\": -32.984474048479285}, {\"freq\": 750.225,\"real\": 62.456044518429586,\"imag\": 2.3063419449574067}, {\"freq\": 765.223,\"real\": 68.47910575323512,\"imag\": -0.2988153564630173}, {\"freq\": 780.222,\"real\": 57.64782663264116,\"imag\": -14.632301630835329}, {\"freq\": 795.221,\"real\": 67.84467749873063,\"imag\": -12.08771398705354}, {\"freq\": 810.219,\"real\": 63.38401941420923,\"imag\": 12.92411450674462}, {\"freq\": 825.217,\"real\": 65.69519059731432,\"imag\": 24.862013767091646}, {\"freq\": 840.216,\"real\": 82.9311480995068,\"imag\": 29.317270408163438}, {\"freq\": 855.215,\"real\": 67.0931840042109,\"imag\": -0.6425777349257146}, {\"freq\": 870.213,\"real\": 64.91993428326884,\"imag\": 9.430896516180525}, {\"freq\": 885.212,\"real\": 33.88472588118765,\"imag\": 38.6113341129666}, {\"freq\": 900.21,\"real\": 55.82282357181228,\"imag\": 23.823150011969908}, {\"freq\": 915.208,\"real\": 66.22341007566932,\"imag\": 28.101656469194086}, {\"freq\": 930.207,\"real\": 45.63701940523359,\"imag\": 29.669827533444522}, {\"freq\": 945.206,\"real\": 19.91047034108527,\"imag\": 33.37581904746696}, {\"freq\": 960.204,\"real\": 42.70130399768958,\"imag\": 33.22705965019844}, {\"freq\": 975.202,\"real\": 44.37303898627698,\"imag\": 30.903492649698883}, {\"freq\": 990.201,\"real\": 50.40613034582125,\"imag\": 35.269289442719014}, {\"freq\": 1005.199,\"real\": 28.93884446034881,\"imag\": 31.509611506564923}, {\"freq\": 1020.198,\"real\": 33.397730808184754,\"imag\": 39.2822658352532}, {\"freq\": 1035.197,\"real\": 64.77647257942975,\"imag\": 42.82761964518031}, {\"freq\": 1050.195,\"real\": 30.458349414704827,\"imag\": 34.949491010759345}, {\"freq\": 1065.194,\"real\": 25.386540113647598,\"imag\": 32.62914407750994}, {\"freq\": 1080.192,\"real\": 35.30998383744755,\"imag\": 32.76346593570705}, {\"freq\": 1095.19,\"real\": 37.377741581890234,\"imag\": 27.70257648268813}, {\"freq\": 1110.189,\"real\": 34.640566812792855,\"imag\": 32.194962545898704}, {\"freq\": 1125.188,\"real\": 19.72326139089326,\"imag\": 27.141929185645253}, {\"freq\": 1140.186,\"real\": 35.46295845342975,\"imag\": 30.86821695218226}, {\"freq\": 1155.185,\"real\": 41.233674390873965,\"imag\": 24.338150126806482}, {\"freq\": 1170.183,\"real\": 51.52843530374806,\"imag\": 18.206355799907392}, {\"freq\": 1185.181,\"real\": 29.245335321521562,\"imag\": 28.578841136534333}, {\"freq\": 1200.18,\"real\": 36.95915956658167,\"imag\": 23.291073262420888}, {\"freq\": 1215.178,\"real\": 43.98563005160703,\"imag\": 14.171526229369583}, {\"freq\": 1230.177,\"real\": 48.10642166266333,\"imag\": 4.040456806610466}, {\"freq\": 1245.176,\"real\": 36.76698039784124,\"imag\": 20.216347997383096}, {\"freq\": 1260.174,\"real\": 37.879674971667704,\"imag\": 17.110667600081122}, {\"freq\": 1275.172,\"real\": 44.09258182139757,\"imag\": 0.6016056089531429}, {\"freq\": 1290.171,\"real\": 38.83490548243774,\"imag\": 3.727598697689921}, {\"freq\": 1305.169,\"real\": 34.97373770525458,\"imag\": 12.72890438200127}, {\"freq\": 1320.168,\"real\": 39.619161626114156,\"imag\": -0.069798916602521}, {\"freq\": 1335.167,\"real\": 36.761995355495465,\"imag\": -7.028767465521594}, {\"freq\": 1350.165,\"real\": 35.27320791179392,\"imag\": -2.9386128426270335}, {\"freq\": 1365.164,\"real\": 35.396607494328606,\"imag\": -5.191478359306919}, {\"freq\": 1380.162,\"real\": 35.13870121537519,\"imag\": 1.1678274579594357}, {\"freq\": 1395.16,\"real\": 34.934410569274064,\"imag\": 0.9668008994291364}, {\"freq\": 1410.159,\"real\": 31.62668522738947,\"imag\": -8.911136449376311}, {\"freq\": 1425.158,\"real\": 31.505254744209537,\"imag\": -5.172989419464717}, {\"freq\": 1440.156,\"real\": 30.418944927700103,\"imag\": -3.331053628211868}, {\"freq\": 1455.155,\"real\": 28.973023658040802,\"imag\": -4.252687332834617}, {\"freq\": 1470.153,\"real\": 21.416125607996612,\"imag\": -10.316223883912025}, {\"freq\": 1485.151,\"real\": 27.838014019216487,\"imag\": -7.424708428653933}, {\"freq\": 1500.15,\"real\": 24.85981905997898,\"imag\": -8.916534988214933}, {\"freq\": 1515.149,\"real\": 22.685215773419777,\"imag\": -10.746554740662354}, {\"freq\": 1530.147,\"real\": 21.608965036721035,\"imag\": -11.321367452398155}, {\"freq\": 1545.146,\"real\": 22.572905511433365,\"imag\": -9.731913180565812}, {\"freq\": 1560.144,\"real\": 23.56820701136123,\"imag\": -8.405744385761777}, {\"freq\": 1575.142,\"real\": 22.719814001227967,\"imag\": -9.114093286456276}, {\"freq\": 1590.141,\"real\": 21.765404871792235,\"imag\": -10.236268747069772}, {\"freq\": 1605.139,\"real\": 19.56132601758279,\"imag\": -10.00278217038603}, {\"freq\": 1620.138,\"real\": 20.653574063795013,\"imag\": -10.526108966360983}, {\"freq\": 1635.137,\"real\": 20.961035646035963,\"imag\": -8.215100296819307}, {\"freq\": 1650.135,\"real\": 17.799892889405598,\"imag\": -12.350792747200341}, {\"freq\": 1665.133,\"real\": 16.294876454858933,\"imag\": -12.482254298903646}, {\"freq\": 1680.132,\"real\": 18.401904709708827,\"imag\": -12.143825788249998}, {\"freq\": 1695.13,\"real\": 20.596826471484274,\"imag\": -11.388312310835888}, {\"freq\": 1710.129,\"real\": 18.958278011495167,\"imag\": -11.452875947929437}, {\"freq\": 1725.128,\"real\": 17.83164805175522,\"imag\": -13.678474618044032}, {\"freq\": 1740.126,\"real\": 21.585378616190273,\"imag\": -11.46932124931724}, {\"freq\": 1755.124,\"real\": 24.244104460746872,\"imag\": -8.870571898586416}, {\"freq\": 1770.123,\"real\": 21.665365765320097,\"imag\": -12.766618122119535}, {\"freq\": 1785.121,\"real\": 21.677893267129964,\"imag\": -11.895214539544588}, {\"freq\": 1800.12,\"real\": 24.396427844179136,\"imag\": -9.818275351924234}, {\"freq\": 1815.119,\"real\": 26.716959214632304,\"imag\": -10.250693106666146}, {\"freq\": 1830.117,\"real\": 24.85682317320593,\"imag\": -9.848822636268086}, {\"freq\": 1845.116,\"real\": 21.185923877342727,\"imag\": -14.589982257055292}, {\"freq\": 1860.114,\"real\": 28.579432174939164,\"imag\": -12.877702757352907}, {\"freq\": 1875.112,\"real\": 33.751943021740246,\"imag\": 3.7913834691331854}, {\"freq\": 1890.111,\"real\": 36.38834282437833,\"imag\": 0.015247677533278632}, {\"freq\": 1905.11,\"real\": 34.783079078264294,\"imag\": -4.842340391037491}, {\"freq\": 1920.108,\"real\": 34.37059759975314,\"imag\": 1.1337907704376304}, {\"freq\": 1935.107,\"real\": 38.71137807944512,\"imag\": 2.6375783138398865}, {\"freq\": 1950.105,\"real\": 38.104104674898565,\"imag\": 6.332350109879913}, {\"freq\": 1965.103,\"real\": 37.0264899857936,\"imag\": 11.24266297023907}, {\"freq\": 1980.102,\"real\": 35.22647325651157,\"imag\": 11.726738451438672}, {\"freq\": 1995.101,\"real\": 38.572581028535836,\"imag\": 15.280059289955533}, {\"freq\": 2010.099,\"real\": 35.90442511980519,\"imag\": 20.65905303613485}, {\"freq\": 2025.098,\"real\": 31.184592727187567,\"imag\": 24.36083972024591}, {\"freq\": 2040.096,\"real\": 27.632129684665557,\"imag\": 25.16814241403258}, {\"freq\": 2055.095,\"real\": 34.09519234309204,\"imag\": 25.69565894530449}, {\"freq\": 2070.093,\"real\": 26.70736009203183,\"imag\": 28.37681175209255}, {\"freq\": 2085.091,\"real\": 23.757625726679166,\"imag\": 27.563902245894003}, {\"freq\": 2100.09,\"real\": 24.82949148625469,\"imag\": 27.188398063803646}, {\"freq\": 2115.088,\"real\": 19.144502522260137,\"imag\": 28.31380152692671}, {\"freq\": 2130.087,\"real\": 15.80057307416751,\"imag\": 29.2620683203992}, {\"freq\": 2145.086,\"real\": 13.670088383498564,\"imag\": 29.31663597523986}, {\"freq\": 2160.084,\"real\": 14.929867320924526,\"imag\": 28.564088137719857}, {\"freq\": 2175.082,\"real\": 11.066159123375545,\"imag\": 26.58638136640641}, {\"freq\": 2190.081,\"real\": 8.800434868741931,\"imag\": 26.002065665323332}, {\"freq\": 2205.079,\"real\": 7.0193989400520715,\"imag\": 23.156815046075952}, {\"freq\": 2220.078,\"real\": 7.340293444440644,\"imag\": 22.7904314513869}, {\"freq\": 2235.077,\"real\": 6.895957303488788,\"imag\": 22.320025360640916}, {\"freq\": 2250.075,\"real\": 5.905800986100242,\"imag\": 23.163487421220506}, {\"freq\": 2265.073,\"real\": 5.481774333287158,\"imag\": 22.326946674120613}, {\"freq\": 2280.072,\"real\": 5.151289269055912,\"imag\": 21.613127174868367}, {\"freq\": 2295.07,\"real\": 7.197246998143582,\"imag\": 21.815035382592477}, {\"freq\": 2310.069,\"real\": 7.268225668036785,\"imag\": 20.68423699459183}, {\"freq\": 2325.068,\"real\": 5.349519096304117,\"imag\": 20.33269249945477}, {\"freq\": 2340.066,\"real\": 5.250462877810165,\"imag\": 19.115254085213486}, {\"freq\": 2355.064,\"real\": 5.628890797292432,\"imag\": 19.98350080423953}, {\"freq\": 2370.063,\"real\": 4.590822314820898,\"imag\": 18.403787216892027}, {\"freq\": 2385.061,\"real\": 4.674564151822651,\"imag\": 17.744894023179974}, {\"freq\": 2400.06,\"real\": 5.476237559656652,\"imag\": 19.10049954162716}, {\"freq\": 2415.059,\"real\": 4.948238957845825,\"imag\": 16.44720320512686}, {\"freq\": 2430.057,\"real\": 6.978429361665632,\"imag\": 17.535997990392943}, {\"freq\": 2445.055,\"real\": 8.219369269916966,\"imag\": 18.407485147566238}, {\"freq\": 2460.054,\"real\": 6.884465526378779,\"imag\": 16.764520958576792}, {\"freq\": 2475.052,\"real\": 7.265892849918167,\"imag\": 16.38836420980887}, {\"freq\": 2490.051,\"real\": 8.03816392509628,\"imag\": 16.619773293587215}, {\"freq\": 2505.05,\"real\": 9.43469197527515,\"imag\": 17.639643243411523}, {\"freq\": 2520.048,\"real\": 9.093908025100164,\"imag\": 16.64833753752788}, {\"freq\": 2535.046,\"real\": 11.252303802634303,\"imag\": 16.616057170142206}, {\"freq\": 2550.045,\"real\": 11.479187480141738,\"imag\": 15.670753312444836}, {\"freq\": 2565.044,\"real\": 12.106473302810064,\"imag\": 15.958483208251598}, {\"freq\": 2580.042,\"real\": 13.052170723769315,\"imag\": 15.283325943410958}, {\"freq\": 2595.041,\"real\": 14.619909256517603,\"imag\": 14.473441500490425}, {\"freq\": 2610.039,\"real\": 14.249165031171966,\"imag\": 13.781876524338898}, {\"freq\": 2625.037,\"real\": 16.299207032058852,\"imag\": 12.486114964416895}, {\"freq\": 2640.036,\"real\": 15.904837097986203,\"imag\": 12.595228114723128}, {\"freq\": 2655.035,\"real\": 15.09156544579446,\"imag\": 13.378417786262776}, {\"freq\": 2670.033,\"real\": 14.71198888033619,\"imag\": 12.877447311843875}, {\"freq\": 2685.032,\"real\": 15.740999028324781,\"imag\": 10.897325581956594}, {\"freq\": 2700.03,\"real\": 15.453101749862578,\"imag\": 10.480637516523299}, {\"freq\": 2715.028,\"real\": 15.612515100347004,\"imag\": 10.341187023375735}, {\"freq\": 2730.027,\"real\": 16.313983510871267,\"imag\": 9.460038511359055}, {\"freq\": 2745.026,\"real\": 16.716692254715277,\"imag\": 7.838104841399409}, {\"freq\": 2760.024,\"real\": 17.502533851579386,\"imag\": 6.9976888719145585}, {\"freq\": 2775.023,\"real\": 18.31089346652371,\"imag\": 5.9153469709513375}, {\"freq\": 2790.021,\"real\": 17.898094256319705,\"imag\": 6.4516779231888695}, {\"freq\": 2805.019,\"real\": 18.135044540477494,\"imag\": 5.137078089052618}, {\"freq\": 2820.018,\"real\": 18.57069929197117,\"imag\": 4.636473889568838}, {\"freq\": 2835.017,\"real\": 17.57232187112451,\"imag\": 6.261472483847002}, {\"freq\": 2850.015,\"real\": 16.538853889850937,\"imag\": 6.735492142041926}, {\"freq\": 2865.014,\"real\": 16.903857310913974,\"imag\": 5.982809527613313}, {\"freq\": 2880.012,\"real\": 16.52725398180626,\"imag\": 6.090471271397074}, {\"freq\": 2895.01,\"real\": 17.455187139759303,\"imag\": 6.432578414026621}, {\"freq\": 2910.009,\"real\": 16.876728989405517,\"imag\": 6.067235817747592}, {\"freq\": 2925.008,\"real\": 16.976982958943964,\"imag\": 5.3415473843621255}, {\"freq\": 2940.006,\"real\": 17.50328481314568,\"imag\": 6.384145120689281}, {\"freq\": 2955.005,\"real\": 17.484988361016686,\"imag\": 7.5623342352796685}, {\"freq\": 2970.003,\"real\": 16.581750166309835,\"imag\": 8.345444383607495}, {\"freq\": 2985.001,\"real\": 15.7020118374731,\"imag\": 9.513016641393108}, {\"freq\": 3000.0,\"real\": 15.274165056510695,\"imag\": 9.48391622067309}]'),\n          fill : false,\n          radius:0,\n      backgroundColor : \"rgb(255, 99, 132)\",\n      borderColor : \"rgb(255, 99, 132)\"\n    } ]\n  }\n\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                <h2>\n                  <strong>Overview</strong>\n                </h2>\n              </CardHeader>\n              <CardBody>\n                <h4>What can MagiMaji do?</h4>\n\n                <p>\n                  1. No need for the complicated software installation. Just\n                  view the file online.\n                </p>\n                <p>\n                  2. Inspect the Touchstone (S1P,S2P,S3P...,S6P) file. (For\n                  security reason, MagiMaji is currently only support the file\n                  less than six ports. More ports support will be released in\n                  the future.)\n                </p>\n                <p>3. RF circuit simulation and optimization.</p>\n                <p>\n                  4. It uses the real components data to simulate the results.\n                </p>\n                <p>5. Antenna matching circuits optimization.</p>\n                <p>\n                  6. It runs on any machines and platforms as long as Internet\n                  and Dynamic HTML are supported. (Windows PC, Mac, Linux,\n                  Android ,IOS , etc.)\n                </p>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <h2>\n                  <strong>Instruction</strong>\n                </h2>\n              </CardHeader>\n              <CardBody>\n                <h3>1. Electrical Delay</h3>\n\n                <p>\n                  Before upload the touchstone file (SnP). Make sure the file\n                  contains the correct electrical delay information. VNA are\n                  usually calibrated to the end of cable. However, in the real\n                  world measurement, for example, to measure the return loss of\n                  antenna, it is not likely I will be able to swirl a SMA\n                  connector of RF cable from VNA to the antenna feed. The most\n                  common approach is to utilize another intermediate such as\n                  coaxial cable or IPEX flexible cable to join the feed and its\n                  ground. The extra electrical length brought by intermediate\n                  cable will introduce a phase shift on the simulated result.\n                  Therefore, the extra electrical length changes the phase of\n                  signal but keeping the same signal strength unless a very\n                  lossy intermediate is used to measure the result. The\n                  difference could be trivial in the dB/Frequency graph.\n                  However, if Smith Chart is preferable for the inspection\n                  during the testing, then the electrical delay is definitely a\n                  critical parameter you cannot ignore.\n                </p>\n                <p>\n                  How do I know if my electrical delay in the SnP file is\n                  correct? A simple way to find it out is to remove all of the\n                  components from the matching circuits. Once I did it and check\n                  the Smith Chart on my VNA, then I should see an electrical\n                  open which correspond to the Smith Chart should be a dot at\n                  the right edge of circle. So what is shown up on my VNA should\n                  be same as the right image below, if not I might need to\n                  adjust the electrical delay to fit it.\n                </p>\n                {/*\n                <div className=\"chart-wrapper\" style={{ height: 550 + 'px', marginTop: 40 + 'px' }}>\n                  <SmithChart data={config}/>\n                </div>\n\n                <div className=\"chart-wrapper\" style={{ height: 550 + 'px', marginTop: 40 + 'px' }}>\n                  <SmithChart data={config2}/>\n                </div> */}\n\n                <h3>2. Save and Upload</h3>\n\n                <p>\n                  Once the electrical delay had been correctly set up, 0ohm\n                  resistors need to be put at the all series joints in the\n                  matching circuit to complete trace path, so that the VNA will\n                  be able to measure the RF performance. Then save the S1P\n                  (Touchstone) file and upload it at the front page of MagiMaji.\n                  However, before rushing into playing the simulation and\n                  optimization,{' '}\n                  <span className=\"text-danger\">\n                    check if the Smith Chart on the browser looks identical as\n                    it is on the VNA.\n                  </span>{' '}\n                  If not, this is because some VNA such as Agilent E5071 doesn't\n                  save the electrical delay into S1P file, and it will be\n                  necessary to\n                  <span className=\"text-primary\">\n                    manually apply the electrical delay{' '}\n                  </span>{' '}\n                  afterwards.\n                </p>\n\n                <h3>3. Simulation</h3>\n                <p>\n                  After applying the correct electrical delay, simply select the\n                  components for the matching circuit to simulate the\n                  performance of return loss. Magimaji has already loaded\n                  several real common components data in advance. The result\n                  simulated should be similar to what it will be measured by the\n                  VNA. But sometimes it won't exactly fit the true result, the\n                  cause could be that the transmission line on the PCB of the\n                  device is not 50 ohm or some other reasons.\n                </p>\n                <h3>4. Optimization</h3>\n                <p>\n                  <span className=\"text-primary\">\n                    After setting up the targeted bands,\n                  </span>{' '}\n                  selecting the topology of matching circuits which are more\n                  preferable to fit it into the device. This optimization is a\n                  convenient function that help people to quickly find the\n                  values of components which could potentially be the optimal\n                  values for the device. It drastically saves the time from\n                  trying different components. Also, the simulated performance\n                  suggested by the optimization could be an indication that the\n                  maximum potential performance, which could be used to decide\n                  if more try and error is necessary or just a waste of time.\n                </p>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default About;\n"],"sourceRoot":""}